{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"None","text":"<p>PxWeb</p>"},{"location":"PxWeb2/","title":"None","text":"<p>PxWeb</p>"},{"location":"PxWeb2/documentation/customization/","title":"Customization","text":"<p>PxWeb comes prebuilt with configuration for tables in English, a set of fonts colors and icons. This guide help you customize PxWeb to your needs.</p> <p>You can:</p> <ul> <li>Configure available languages and set a default fallback.</li> <li>Add a new language or adjust existing translations.</li> <li>Change colors (design tokens).</li> <li>Adjust corner radii of UI elements.</li> <li>Replace fonts.</li> <li>Change topic icons.</li> <li>Limit table sizes.</li> <li>Control how languages appear in URLs.</li> <li>Hide variables from the variable filter.</li> <li>Customize start page text and footer links (examples included below).</li> <li>Define characters used for missing values.</li> </ul> <p>Below you will find a set of practical How to sections.</p>"},{"location":"PxWeb2/documentation/customization/#folder-structure","title":"Folder structure","text":"<p>When you unzip the official PxWeb 2.0 release you get a structure like:</p> <pre><code>root\n\u251c\u2500\u2500 index.html               # (1)!\n\u251c\u2500\u2500 web.config               # (2)!\n\u251c\u2500\u2500 assets                   # (3)!\n\u251c\u2500\u2500 config\n\u2502   \u2514\u2500\u2500 config.js            # (4)!\n\u251c\u2500\u2500 content                  # (5)!\n\u2502   \u251c\u2500\u2500 ar\n\u2502   \u2502   \u2514\u2500\u2500 content.json\n\u2502   \u251c\u2500\u2500 en\n\u2502   \u2502   \u2514\u2500\u2500 content.json\n\u2502   \u251c\u2500\u2500 no\n\u2502   \u2502   \u2514\u2500\u2500 content.json\n\u2502   \u2514\u2500\u2500 sv\n\u2502       \u2514\u2500\u2500 content.json\n\u251c\u2500\u2500 fonts                    \n\u2502   \u251c\u2500\u2500 PxWeb-font-400.ttf\n\u2502   \u251c\u2500\u2500 PxWeb-font-500.ttf\n\u2502   \u2514\u2500\u2500 PxWeb-font-700.ttf\n\u251c\u2500\u2500 icons\n\u2502   \u251c\u2500\u2500 topicIconMap.json    # (6)!\n\u2502   \u2514\u2500\u2500 topic\n\u2502       \u251c\u2500\u2500 icon1.svg\n\u2502       \u251c\u2500\u2500 icon2.svg\n\u2502       \u251c\u2500\u2500 ...\n\u2502       \u2514\u2500\u2500 small/\n\u2502           \u251c\u2500\u2500 icon1.svg\n\u2502           \u251c\u2500\u2500 icon2.svg\n\u2502           \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 images\n\u2502   \u251c\u2500\u2500 favicon.svg\n\u2502   \u251c\u2500\u2500 favicon-darkmode.svg\n\u2502   \u2514\u2500\u2500 logo.svg\n\u251c\u2500\u2500 locales                  # (7)!\n\u2502   \u251c\u2500\u2500 ar\n\u2502   \u2502   \u2514\u2500\u2500 translation.json\n\u2502   \u251c\u2500\u2500 en\n\u2502   \u2502   \u2514\u2500\u2500 translation.json\n\u2502   \u251c\u2500\u2500 no\n\u2502   \u2502   \u2514\u2500\u2500 translation.json\n\u2502   \u2514\u2500\u2500 sv\n\u2502       \u2514\u2500\u2500 translation.json\n\u2514\u2500\u2500 theme\n    \u2514\u2500\u2500 variables.css\n</code></pre> <ol> <li><code>index.html</code> is the page that bootstraps PxWeb.</li> <li><code>web.config</code> is a starting point if you host on Microsoft IIS.  </li> <li><code>assets</code> contains the compiled JavaScript/CSS for PxWeb. You normally do not     edit anything inside this folder.</li> <li><code>config.js</code> the main config file for PxWeb.</li> <li><code>content</code> a folder containg content customizations e.g. links in the footer.</li> <li><code>topicIconMap.json</code> is a file where mapping between tables <code>SUBJECT-CODE</code> and     icons are made.</li> <li><code>locales</code> a folder where translated text are placed.</li> </ol>"},{"location":"PxWeb2/documentation/customization/#how-tos","title":"How to\u2019s","text":""},{"location":"PxWeb2/documentation/customization/#change-the-api-endpoint","title":"Change the API endpoint","text":"<p>PxWeb retrieves table metadata and data from a PxWeb API 2.0 instance. Open <code>config/config.js</code> and set <code>apiUrl</code>:</p> <pre><code>  window.PxWeb2Config = {\n    language: {\n      supportedLanguages: [\n        { shorthand: 'en', languageName: 'English' }\n      ],\n      defaultLanguage: 'en',\n      fallbackLanguage: 'en',\n      showDefaultLanguageInPath: true,\n    },\n    baseApplicationPath: '/',\n    apiUrl: \"https://your.api.server/PxWeb/api/v2\",\n    maxDataCells: 100000,\n    specialCharacters: ['.', '..', ':', '-', '...', '*'],\n    variableFilterExclusionList: {\n      en: [\n        'observations',\n        'year',\n        'quarter',\n        'month',\n        'every other year',\n        'every fifth year',\n      ]\n    },\n  };\n</code></pre> <p>Omit a trailing slash, one is added automatically.</p>"},{"location":"PxWeb2/documentation/customization/#run-pxweb-under-a-subpath","title":"Run PxWeb under a subpath","text":"<p>If you serve PxWeb from e.g. <code>https://www.mysite.org/pxweb</code> (without an upstream reverse proxy):</p> <ol> <li>Set <code>baseApplicationPath</code> in <code>config/config.js</code>:</li> </ol> <pre><code>baseApplicationPath: \"/pxweb/\"\n</code></pre> <ol> <li>In <code>index.html</code>, adjust the <code>&lt;base&gt;</code> tag:</li> </ol> <pre><code>&lt;base href=\"/pxweb/\"&gt;\n</code></pre> <ol> <li>Ensure the web server rewrites (if needed) static file requests correctly to    that subpath.</li> </ol>"},{"location":"PxWeb2/documentation/customization/#limit-how-large-tables-can-be-viewed","title":"Limit how large tables can be viewed","text":"<p>Set <code>maxDataCells</code> in <code>config/config.js</code>. Example:</p> <pre><code>maxDataCells: 500000\n</code></pre> <p>API limitation</p> <p>The API has its own limit. Do not set the UI limit higher than the API\u2019s backend limit to avoid inconsistent behavior. Usually they should match.</p>"},{"location":"PxWeb2/documentation/customization/#change-the-default-characters-for-missing-values","title":"Change the default characters for missing values","text":"<p>Edit the <code>specialCharacters</code> array in <code>config/config.js</code>:</p> <pre><code>specialCharacters: ['.', '..', ':', '-', '...', '*']\n</code></pre> <p>These are displayed when a data point is missing or confidential.</p>"},{"location":"PxWeb2/documentation/customization/#exclude-variables-from-the-variable-filter","title":"Exclude variables from the variable filter","text":"<p>To hide certain variables from appearing in the initial variable filter, add their (localized) names under <code>variableFilterExclutionList</code> per language in <code>config/config.js</code>:</p> <pre><code>variableFilterExclutionList: {\n  en: [\"Contents\"],\n  sv: [\"Inneh\u00e5ll\"]\n}\n</code></pre> <p>Repeat for every supported language.</p>"},{"location":"PxWeb2/documentation/customization/#configure-site-languages","title":"Configure site languages","text":"<p>In <code>config/config.js</code>:</p> <pre><code>  window.PxWeb2Config = {\n    language: {\n      supportedLanguages: [\n        { shorthand: 'en', languageName: 'English' },\n        { shorthand: 'sv', languageName: 'Svenska' }\n      ],\n      defaultLanguage: 'sv',\n      fallbackLanguage: 'en',\n      showDefaultLanguageInPath: true,\n    },\n    baseApplicationPath: '/',\n    apiUrl: \"https://your.api.server/PxWeb/api/v2\",\n    maxDataCells: 100000,\n    specialCharacters: ['.', '..', ':', '-', '...', '*'],\n    variableFilterExclusionList: {\n      en: [\n        'observations',\n        'year',\n        'quarter',\n        'month',\n        'every other year',\n        'every fifth year',\n      ]\n    },\n  };\n</code></pre> <ul> <li><code>supportedLanguages</code>: The active languages (must match those available in the API).</li> <li><code>defaultLanguage</code>: The primary language.</li> <li><code>fallbackLanguage</code>: Used if a translation key is missing for the active language.</li> <li><code>showDefaultLanguageInPath</code>: If <code>true</code>, URLs include the default language code.</li> </ul>"},{"location":"PxWeb2/documentation/customization/#add-a-completely-new-language","title":"Add a completely new language","text":"<ol> <li>Create a folder under <code>locales/</code> using the ISO 639\u20111 two-letter code (e.g. <code>fr</code>).</li> <li>Copy <code>locales/en/translation.json</code> into <code>locales/fr/translation.json</code>.</li> <li>Translate the values (keep keys intact).</li> <li>Add <code>\"fr\"</code> to <code>supportedLanguages</code>.</li> <li>(Optional) Add localized content under <code>content/fr/content.json</code> if your    content system uses it.</li> </ol>"},{"location":"PxWeb2/documentation/customization/#change-fonts","title":"Change fonts","text":"<p>Replace the font files in the <code>fonts</code> directory. Keep file names.</p> <p>Make sure you have the proper license to self-host fonts.</p>"},{"location":"PxWeb2/documentation/customization/#adjust-or-fix-text-translations","title":"Adjust or fix text / translations","text":"<p>Edit the relevant <code>locales/&lt;lang&gt;/translation.json</code>. Keys reflect where in the UI a string is used. Only modify values.  </p> Example snippet <pre><code>{\n  \"common\": {\n    \"title\": \"PxWeb 2.0\",\n    \"header\": {\n      \"logo\": \"PxWeb 2.0\",\n      \"logo_alt\": \"To the front page\",\n      \"language_selector\": \"Spr\u00e5k/Language\"\n    },\n  }\n}  \n</code></pre>"},{"location":"PxWeb2/documentation/customization/#hide-or-show-the-default-language-in-the-url","title":"Hide or show the default language in the URL","text":"<p>Toggle: <pre><code>  window.PxWeb2Config = {\n    language: {\n      supportedLanguages: [\n        { shorthand: 'en', languageName: 'English' }\n      ],\n      defaultLanguage: 'en',\n      fallbackLanguage: 'en',\n      showDefaultLanguageInPath: true, // or false\n    },\n    baseApplicationPath: '/',\n    apiUrl: \"https://your.api.server/PxWeb/api/v2\",\n    maxDataCells: 100000,\n    specialCharacters: ['.', '..', ':', '-', '...', '*'],\n    variableFilterExclusionList: {\n      en: [\n        'observations',\n        'year',\n        'quarter',\n        'month',\n        'every other year',\n        'every fifth year',\n      ]\n    },\n  };\n</code></pre></p> <p>in the <code>language</code> section of <code>config/config.js</code>.</p>"},{"location":"PxWeb2/documentation/customization/#change-topic-icons-on-the-start-page","title":"Change topic icons on the start page","text":"<p>Each table can have an associated icon. Mapping is done through the table\u2019s <code>SOBJECT-CODE</code> in:</p> <pre><code>/icons/topicIconMap.json\n</code></pre> <p>Add mapping between subject code and icon file like:</p> <pre><code>{\n  \"ED\": \"education.svg\",\n  \"HE\": \"health.svg\"\n}\n</code></pre> <p>If you whant to user your own icons add them in both:</p> <ul> <li><code>/icons/topic/</code> (SVG 36\u00d736)</li> <li><code>/icons/topic/small/</code> (SVG 28\u00d728)</li> </ul>"},{"location":"PxWeb2/documentation/customization/#change-corner-rounding-border-radii","title":"Change corner rounding (border radii)","text":"<p>Edit these CSS variables in <code>theme/variables.css</code>:</p> <ul> <li><code>--px-border-radius-xxsmall</code></li> <li><code>--px-border-radius-xsmall</code></li> <li><code>--px-border-radius-small</code></li> <li><code>--px-border-radius-medium</code></li> <li><code>--px-border-radius-large</code></li> <li><code>--px-border-radius-xlarge</code></li> </ul> <p>Do not alter <code>--px-border-radius-none</code> or <code>--px-border-radius-full</code> unless you know the side effects (they are used for logical extremes).</p>"},{"location":"PxWeb2/documentation/customization/#change-the-text-and-related-links-on-the-startpage-and-in-the-footer","title":"Change the text and related links on the startpage and in the footer","text":"<p>The <code>content.json</code> file defines customizable text and links that appear in PxWeb\u2019s user interface This file allows you to configure localized UI content: you can add or change the breadcrumb navigation on the start page, add a detailsSection after the ingress on the start page, or update the footer content for the application.</p> <pre><code>root/content\n\u251c\u2500\u2500 ar\n\u2502   \u2514\u2500\u2500 content.json\n\u251c\u2500\u2500 en\n\u2502   \u2514\u2500\u2500 content.json\n\u251c\u2500\u2500 no\n\u2502   \u2514\u2500\u2500 content.json\n\u2514\u2500\u2500 sv\n    \u2514\u2500\u2500 content.json\n</code></pre> <ul> <li>Each language folder contains its own <code>content.json</code>.</li> <li>The active language determines which file is loaded at runtime.</li> <li>This makes it possible to have different breadcrumbs, footer links, or details   text depending on the selected language.</li> </ul> <p>Structure overview:</p> <pre><code>{\n  \"startPage\": {\n    \"breadCrumb\": {\n      \"enabled\": false,\n      \"items\": []\n    },\n    \"detailsSection\": {\n      \"enabled\": true,\n      \"detailHeader\": \"More about PxWeb\",\n      \"detailContent\": []\n    }\n  },\n  \"footer\": {\n    \"columns\": []\n  }\n}\n</code></pre> <ul> <li>startPage.breadCrumb   Optional breadcrumb navigation on start page. Enabled with the <code>enabled</code> flag.   Each item contains a <code>label</code> and an <code>href</code>.</li> <li> <p>startPage.detailsSection \u2013 Optional section below the page ingress. When   <code>enabled</code> is <code>true</code>, the application renders the <code>DetailsSection</code> component.   This section can contain multiple entries, and each entry may be either a   <code>textBlock</code> (with <code>header</code> and <code>text</code>) or a <code>links</code> block (with <code>header</code> and a   list of <code>items</code>).</p> </li> <li> <p>footer   One or more footer columns with <code>header</code> and list of <code>links</code>.</p> </li> </ul> <p>This setup allows administrators to adjust localized content (text and links)   for each language without modifying the application code.</p>"},{"location":"PxWeb2/documentation/customization/#change-the-colors-design-tokens","title":"Change the colors (Design Tokens)","text":"<p>PxWeb\u2019s visual styling is driven by CSS custom properties (\u201cdesign tokens\u201d). Understanding token layers helps you customize safely.</p> <p>Token categories:</p> <ol> <li>Primitive (Base) Tokens: Raw color values (brand, accent, neutrals, semantic    palettes). Example: <code>--px-color-brand-400</code>.</li> <li>Semantic (System) Tokens: Contextual meaning-based tokens mapping to     primitives. Example: <code>--px-color-surface-default</code>, <code>--px-color-text-action</code>.</li> <li>Component / Alias Tokens (if introduced later): Optional intermediary     re-mappings for specific components.</li> </ol> <p>Principles:</p> <ul> <li>You normally change only primitive tokens (<code>--px-color-brand-*</code>,   <code>--px-color-accent-*</code>, <code>--px-color-neutral-*</code>, and semantic palette roots like   <code>--px-color-info-100</code>).</li> <li>Semantic tokens derive usability (contrast, hierarchy) from primitives. Avoid   editing semantic tokens unless you fully control downstream impacts.</li> <li>Keep sufficient contrast (WCAG AA: 4.5:1 for normal text, 3:1 for large / UI elements).</li> <li>Maintain directional progression (e.g. <code>-50</code> lighter \u2192 <code>-900</code> darkest).</li> </ul> <p>Location: All tokens reside in <code>theme/variables.css</code>.</p> <p>Typical edit workflow:</p> <ol> <li>Inventory current brand identity (primary, secondary, accent).</li> <li>Decide which existing scale (brand, accent, neutral) maps to your brand palette.</li> <li>Replace primitive hex values:</li> </ol> <pre><code>:root {\n  --px-color-brand-50:  #F5FAFF;\n  --px-color-brand-100: #E3F2FE;\n  --px-color-brand-200: #C6E4FD;\n  --px-color-brand-400: #5BB4F6;\n  --px-color-brand-600: #1D78C7;\n  --px-color-brand-800: #0F3F63;\n  --px-color-brand-900: #072638;\n}\n</code></pre> <ol> <li>Rebuild or reload the page; verify legibility in buttons, table headers,    focus outlines.</li> <li>Test states: hover (<code>--px-color-surface-action-hover</code>), active, focus    outlines, inverted surfaces (dark backgrounds).</li> <li>Use a tooling aid (e.g. Leonardo) to    generate balanced scales if starting from one or two seed colors.</li> <li>Run automated accessibility checks (e.g. Lighthouse, axe) to validate contrasts.</li> </ol> <p>Do NOT:</p> <ul> <li>Randomly change semantic tokens like <code>--px-color-text-default</code> unless you   intentionally override the model.</li> <li>Mix light/dark semantics arbitrarily; ensure base background tokens stay coherent.</li> </ul> <p>Primitive token groups you can safely adjust:</p> <ul> <li><code>--px-color-brand-*</code></li> <li><code>--px-color-accent-*</code></li> <li> <p><code>--px-color-neutral-*</code></p> </li> <li> <p>Semantic palettes for status:</p> </li> <li> <p><code>--px-color-info-*</code></p> </li> <li><code>--px-color-success-*</code></li> <li><code>--px-color-warning-*</code></li> <li><code>--px-color-danger-*</code></li> </ul> <p>Avoid altering:</p> <ul> <li>Focus ring semantic tokens unless verifying accessibility (<code>--px-color-border-focus-outline</code>).</li> <li>Action text vs. action background pairings (they are tuned for contrast).</li> </ul> <p>Reference mapping (primitive \u2192 semantic usage) is documented below to understand impact of changing a primitive.</p>"},{"location":"PxWeb2/documentation/customization/#color-mappings","title":"Color mappings","text":"<p>Below is the mapping of primitive tokens to semantic tokens that consume them:</p> <ul> <li><code>--px-color-base-00</code><ul> <li><code>--px-color-background-default</code></li> <li><code>--px-color-surface-default</code></li> <li><code>--px-color-border-on-inverted</code></li> <li><code>--px-color-text-on-inverted</code></li> <li><code>--px-color-text-on-action</code></li> <li><code>--px-color-icon-on-inverted</code></li> <li><code>--px-color-icon-on-action</code></li> </ul> </li> <li><code>--px-color-brand-alpha-800</code><ul> <li><code>--px-color-surface-scrim</code></li> </ul> </li> <li><code>--px-color-brand-50</code><ul> <li><code>--px-color-background-subtle</code></li> <li><code>--px-color-surface-subtle</code></li> </ul> </li> <li><code>--px-color-brand-100</code><ul> <li><code>--px-color-surface-moderate</code></li> <li><code>--px-color-surface-action-subtle-hover</code></li> </ul> </li> <li><code>--px-color-brand-200</code><ul> <li><code>--px-color-surface-search-string-highlight</code></li> <li><code>--px-color-surface-action-subtle-active</code></li> <li><code>--px-color-border-subtle</code></li> <li><code>--px-color-border-divider-subtle</code></li> </ul> </li> <li><code>--px-color-brand-400</code><ul> <li><code>--px-color-border-moderate</code></li> <li><code>--px-color-border-divider</code></li> <li><code>--px-color-border-hover</code></li> </ul> </li> <li><code>--px-color-brand-600</code><ul> <li><code>--px-color-text-subtle</code></li> </ul> </li> <li><code>--px-color-brand-800</code><ul> <li><code>--px-color-surface-inverted</code></li> <li><code>--px-color-surface-action</code></li> <li><code>--px-color-border-action</code></li> <li><code>--px-color-border-selected</code></li> <li><code>--px-color-text-action</code></li> <li><code>--px-color-icon-action</code></li> </ul> </li> <li><code>--px-color-brand-900</code><ul> <li><code>--px-color-surface-action-hover</code></li> <li><code>--px-color-surface-action-active</code></li> <li><code>--px-color-border-default</code></li> <li><code>--px-color-border-focus-boxshadow</code></li> <li><code>--px-color-text-default</code></li> <li><code>--px-color-text-on-action-subtle</code></li> <li><code>--px-color-icon-default</code></li> <li><code>--px-color-icon-on-action-subtle</code></li> </ul> </li> <li><code>--px-color-accent-300</code><ul> <li><code>--px-color-border-focus-outline-on-inverted</code></li> </ul> </li> <li><code>--px-color-accent-500</code><ul> <li><code>--px-color-border-focus-outline</code></li> </ul> </li> <li><code>--px-color-neutral-100</code><ul> <li><code>--px-color-surface-neutral-subtle</code></li> </ul> </li> <li><code>--px-color-neutral-200</code><ul> <li><code>--px-color-surface-neutral-moderate</code></li> </ul> </li> <li><code>--px-color-info-100</code><ul> <li><code>--px-color-surface-info-subtle</code></li> </ul> </li> <li><code>--px-color-info-200</code><ul> <li><code>--px-color-surface-info-moderate</code></li> </ul> </li> <li><code>--px-color-info-600</code><ul> <li><code>--px-color-border-info</code></li> <li><code>--px-color-icon-info</code></li> </ul> </li> <li><code>--px-color-success-100</code><ul> <li><code>--px-color-surface-success-subtle</code></li> </ul> </li> <li><code>--px-color-success-200</code><ul> <li><code>--px-color-surface-success-moderate</code></li> </ul> </li> <li><code>--px-color-success-600</code><ul> <li><code>--px-color-border-success</code></li> <li><code>--px-color-icon-success</code></li> </ul> </li> <li><code>--px-color-warning-100</code><ul> <li><code>--px-color-surface-warning-subtle</code></li> </ul> </li> <li><code>--px-color-warning-200</code><ul> <li><code>--px-color-surface-warning-moderate</code></li> </ul> </li> <li><code>--px-color-warning-600</code><ul> <li><code>--px-color-border-warning</code></li> <li><code>--px-color-icon-warning</code></li> </ul> </li> <li><code>--px-color-danger-100</code><ul> <li><code>--px-color-surface-error-subtle</code></li> </ul> </li> <li><code>--px-color-danger-200</code><ul> <li><code>--px-color-surface-error-moderate</code></li> </ul> </li> <li><code>--px-color-danger-600</code><ul> <li><code>--px-color-border-error</code></li> <li><code>--px-color-icon-error</code></li> </ul> </li> </ul>"},{"location":"PxWeb2/documentation/customization/#troubleshooting","title":"Troubleshooting","text":"Issue Possible Cause Fix Language not switching Missing folder or translation key Verify <code>locales/&lt;lang&gt;/translation.json</code> exists and is valid JSON Icons not showing File name mismatch Ensure mapping file matches actual SVG names Colors look inconsistent Edited semantic tokens directly Revert semantic tokens; adjust primitives only Table too large error API limit lower than UI limit Align <code>maxDataCells</code> with API config Broken layout after font change Font weights not matching Provide correct weights or adjust CSS font-weight usage"},{"location":"PxWeb2/documentation/customization/#checklist-after-customization","title":"Checklist After Customization","text":"<ul> <li> All languages load without console errors.</li> <li> Color contrast passes automated tests.</li> <li> Focus outline visible on interactive elements.</li> <li> Missing value characters render distinctly.</li> <li> Icons display in both normal and small variants.</li> <li> No 404s for font or icon assets.</li> <li> Table size limit behaves as expected.</li> </ul>"},{"location":"PxWeb2/documentation/customization/#summary","title":"Summary","text":"<p>Customize primarily through:</p> <ul> <li><code>config/config.js</code> (behavior, language, API settings)</li> <li><code>locales/&lt;lang&gt;/translation.json</code> (text)</li> <li><code>theme/variables.css</code> (tokens: colors, radii, possibly fonts)</li> <li><code>icons/</code> (topic icons)</li> <li><code>index.html</code> (base path, structural HTML, optional static footer/start content)</li> </ul> <p>Make incremental changes and test after each step for accessibility and consistency.</p>"},{"location":"PxWeb2/documentation/docker/","title":"Docker","text":"<p>This document describes how you can use Docker Compose to try out the new PxWeb 2.0 with your excisting database. The reason we need Compose is that the new PxWeb access the database through PxWebApi, so we need to run alt least two containers.</p>"},{"location":"PxWeb2/documentation/docker/#prerequisites","title":"Prerequisites","text":"<ul> <li> <p>Git client</p> <ul> <li>Install Git</li> </ul> </li> <li> <p>Docker CLI - via one of these alternatives:</p> <ul> <li>Docker desktop - Docker   desktop (may require license)</li> <li>Colima - Colima command-line tool</li> <li>Rancher - Rancher desktop</li> <li>Podman - Podman desktop</li> </ul> <p>Info</p> <p>We use services lifecycle hooks from docker-compose v2.30.0 so you may need to upgrade your installation to the latest version for this example to work</p> </li> <li> <p>clone or download this repo https://github.com/PxTools/PxWebApi</p> <pre><code>git clone https://github.com/PxTools/PxWebApi.git\n</code></pre> </li> </ul>"},{"location":"PxWeb2/documentation/docker/#database","title":"Database","text":"<p>Follow instructions for one of the databases</p>"},{"location":"PxWeb2/documentation/docker/#px-file-database","title":"PX-file database","text":"<ul> <li> <p>Obtain a copy of a PX-file database from a PxWeb 2023 (or older) installation</p> </li> <li> <p>Copy the files to this folder <code>docker/pxwebapi/Database</code></p> <p>If you don't have a copy of your database yet, we can continues with a small sample database</p> <pre><code>cd docker/pxwebapi/Database\nunzip tinydatabase.zip\n</code></pre> <p>And return to the root folder for the next step</p> <pre><code>cd ../../../\n</code></pre> </li> </ul>"},{"location":"PxWeb2/documentation/docker/#cnmm-database","title":"CNMM database","text":"<ul> <li> <p>It is possible to connect to a CNMM database from Docker, subject to your   office's local security policies.</p> <p>These are the files you need to change. A detailed description is in the configuration chapter.</p> <pre><code>docker/pxwebapi/appsettings.json\ndocker/pxwebapi/SqlDb.config\n</code></pre> </li> </ul>"},{"location":"PxWeb2/documentation/docker/#start-docker","title":"Start Docker","text":"<ul> <li> <p>Start PxWebApi and PxWeb</p> <pre><code>docker compose up\n</code></pre> </li> </ul> <p>During (every) startup in this demo, the <code>Menu.xml</code> (PX-file database) and   searchindex <code>_INDEX</code> folder will be regenerated. This can take some time on   lager databases. Since we are still in beta, please do not run this on your   production servers.</p> <ul> <li> <p>Your API should now be running on</p> <ul> <li>http://localhost:8081/api/v2/</li> <li>http://localhost:8081/api/v2/tables</li> </ul> </li> <li> <p>Your PxWeb should be running on this port</p> <ul> <li>http://localhost:8080/</li> </ul> </li> </ul>"},{"location":"PxWeb2/documentation/installation-on-iis/","title":"Install PxWeb 2 on your IIS server","text":"<p>This instruction guides you in how to install PxWeb 2 on IIS.</p>"},{"location":"PxWeb2/documentation/installation-on-iis/#prerequisites","title":"Prerequisites","text":"<ul> <li>A supported Windows server with IIS installed.</li> <li>The URL Rewrite module must be installed on your IIS.</li> <li>ApiUrl to your PxWebApi 2 installation.   If your tables endpoint is at <code>https://your.api.server/PxWeb/api/v2/tables</code>   then your ApiUrl is <code>https://your.api.server/PxWeb/api/v2</code>  (omit a trailing slash, one is added automatically)</li> </ul>"},{"location":"PxWeb2/documentation/installation-on-iis/#installation-steps","title":"Installation steps","text":"<ol> <li>Download the zip file for the latest release from GitHub.   It is found inside the Asserts heading.   Make sure to Unblock it if its block by right clicking on it in File Explorer and check the <code>Unblock</code> checkbox.</li> <li>Put the contents of the zip file to the location of your choice. E.g <code>C:\\inetpub\\wwwroot\\pxweb2</code>.</li> <li> <p>Adjust <code>baseApplicationPath</code> and <code>apiUrl</code> in <code>config\\config.js</code>:</p> <pre><code>baseApplicationPath: \"/pxweb2/\"\n\napiUrl: \"your api url\"\n</code></pre> </li> <li> <p>In <code>index.html</code>, adjust the <code>&lt;base&gt;</code> tag:</p> <pre><code>&lt;base href=\"/pxweb2/\"&gt;\n</code></pre> </li> <li> <p>In <code>web.config</code>, adjust the <code>Content-Security-Policy</code> to allow calls to your PxWebApi 2 installation. Within the <code>Content-Security-Policy</code> replace the text <code>https://enter-your-api-domain-here</code> with the domain of your PxWebApi (for example https://api.scb.se):</p> <pre><code>&lt;add name=\"Content-Security-Policy\" value=\"default-src 'self'; connect-src 'self' https://api.scb.se; script-src 'self'\" /&gt;\n</code></pre> </li> <li> <p>In IIS find the folder and convert it to an application. (Consider using a separate Application pool for this)</p> </li> <li> <p>Open \"http(s)://\"server adress\"/pxweb2 .</p> </li> </ol>"},{"location":"PxWeb2/documentation/installation-on-iis/#troubleshooting","title":"Troubleshooting","text":""},{"location":"PxWeb2/documentation/installation-on-iis/#problem-running-pxweb-on-localhost","title":"Problem running PxWeb on localhost","text":"<p>If you are trying to run PxWeb directly on the server under localhost you might get an error looking like this in the console of your browser:</p> <pre><code>Uncaught EvalError: Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of script in the following Content Security Policy directive: \"script-src 'self'\".\n</code></pre>"},{"location":"PxWeb2/documentation/installation-on-iis/#solution","title":"Solution","text":"<p>Change localhost in the URL to the computer name of the server.</p>"},{"location":"PxWeb2/documentation/installation-on-iis/#pxweb-refuses-to-connect-to-pxwebapi","title":"PxWeb refuses to connect to PxWebApi","text":"<p>If you get an error message looking like this in the console of your browser:</p> <pre><code>Refused to connect to 'https://your-api-url' because it violates the following Content Security Policy directive: \"connect-src 'self' https://enter-your-api-domain-here\".\n</code></pre>"},{"location":"PxWeb2/documentation/installation-on-iis/#solution_1","title":"Solution","text":"<p>You need to enter the domain of your PxWebApi in the Content Security Policy section in web.config, see step 5 of the installation steps above.</p>"},{"location":"PxWeb2/documentation/getting-started/configuration/","title":"Configuration","text":""},{"location":"PxWeb2/documentation/getting-started/configuration/#application-configuration-settings","title":"Application configuration settings","text":""},{"location":"PxWeb2/documentation/getting-started/configuration/#api-end-point","title":"API end point","text":"<p>In order for PxWeb to display your statistics, you need to configure the URL to the root of PxWebApi 2.0</p>"},{"location":"PxWeb2/documentation/getting-started/configuration/#language-settings","title":"Language settings","text":"<p>Is that fetched from the API?</p>"},{"location":"PxWeb2/documentation/getting-started/configuration/#todo-other-settings","title":"TODO other settings","text":""},{"location":"PxWeb2/documentation/getting-started/configuration/#application-configuration-settings_1","title":"Application configuration settings","text":""},{"location":"PxWeb2/documentation/getting-started/contribute/add-translations/","title":"Add translations","text":"<p>Help us out adding translations to PxWeb.</p>"},{"location":"PxWeb2/documentation/getting-started/contribute/help-us-write-the-docs/","title":"Help us write the docs","text":"<p>With good documentation ...</p>"},{"location":"PxWeb2/documentation/getting-started/contribute/report-a-bug/","title":"Report a bug","text":"<p>TODO: Add link to GitHub issues.</p> <p>TODO: Security issues should be reported with GitHub ...</p>"},{"location":"PxWeb2/project/Solution/","title":"PxWeb solution","text":"<p>In the project, we have made some choices about how we will work in the project across two countries, in order to create opportunities for other countries to contribute in the long term with both development and user testing of PxWeb 2.0. In addition, we have made some choices to find the best solution for installing PxWeb. All this to reach the main goal to create a user-friendly PxWeb.</p>"},{"location":"PxWeb2/project/Solution/#wcag-and-search-engine-optimization-seo","title":"WCAG and Search Engine Optimization (SEO)","text":"<ul> <li>The new interface will follow the rules for A and AA in WCAG 2.1</li> <li>SEO is the use of methods that achieve better visibility or \"ranking\" on search engines result page.</li> </ul>"},{"location":"PxWeb2/project/Solution/#pxweb-20-designsystem","title":"PxWeb 2.0 designsystem","text":"<p>We build a design system that can be used by all so the same components can be used for all px products so they get a common expression and be recognizable.  Design system in Storybook</p>"},{"location":"PxWeb2/project/Solution/#options-in-pxweb-20","title":"Options in PxWeb 2.0","text":"<p>Each organization should easily be able to adapt the interface a little, but it should still be possible to see that it is a Px-product.  The changes will be possible to introduce both before and after installation of PxWeb 2.0. It will be possible to change - colors - font - corner radius of the elements in the interface.</p>"},{"location":"PxWeb2/project/Solution/#open-source-at-github","title":"Open source at GitHub","text":"<p>The new interface will be able do install directly from GitHub. Also documentation will be found here.  PxTools at GitHub</p>"},{"location":"PxWeb2/project/Solution/#usertest","title":"Usertest","text":"<p>We are following the UX design process in this project.  All the choices we make must be based on user insigth.  The main focus has been navigation, understand the main fuctionaility in PxWeb and how the most used task should work. We have done four usertest so far, both on desktop and mobile, and will continue in the whole project period. </p>"},{"location":"PxWeb2/project/Solution/#possibility-for-connection","title":"Possibility for connection","text":"<p>When PxWeb 2.0 interface is ready for production, it is easy to connect other tools such as Highcharts, Tableau, Power BI and other AI products. This can be connected both by using saved queries from PxWeb 2.0 or by connecting directly to PxWebApi 2.0.</p>"},{"location":"PxWeb2/project/overview/","title":"Introduction to PxWeb","text":""},{"location":"PxWeb2/project/overview/#background","title":"Background","text":"<p>PxWeb is an application for disseminating statistics in dynamic tables from an SQL or file-based database on the web. The user interface in PxWeb2025 could no longer be effectively developed due to technological limitations, and users needs and expectations are constantly changing so Statistics Sweden and Statistics Norway jointly initiated a project in January 2024. The aim of the project was to create a new user interface based on PxWebApi 2 and was released in its first version in October 2025.</p>"},{"location":"PxWeb2/project/overview/#two-goals-of-the-project-january-2024-october-2025","title":"Two goals of the Project (January 2024 - October 2025)","text":"<p>The project had two goals - A new user-friendly interface for PxWeb based on PxWebApi 2  - Test and establish effective and sustainable collaboration processes between Statistics Sweden, SCB and Statistics Norway, SSB at both operational level and management level in the further development of PX-tools</p>"},{"location":"PxWeb2/project/overview/#organization","title":"Organization","text":""},{"location":"PxWeb2/project/overview/#steering-group","title":"Steering group","text":"<p>The steering group consist of managers at Communication and IT in SCB and SSB. </p>"},{"location":"PxWeb2/project/overview/#project-team","title":"Project team","text":"<p>The team had participants from both Statistics Sweden and Statistics Norway. The team is set up with - Project leader - Scrum master - Architects - UX/UI Designer - Developers - Specialists - Technical lead - Test leader  - Testers    ## Contact for questions and comments Kristin Gloms\u00e5s, Statistics Norway kristin.glomsas@ssb.no \u00c5sa Arrh\u00e9n, Statistics Sweden px@scb.se</p>"},{"location":"PxWeb2/project/plans/","title":"Plans","text":""},{"location":"PxWeb2/project/plans/#remaining-to-develop-after-2025-in-pxweb-2","title":"Remaining to develop after 2025 in PxWeb 2","text":"<ul> <li>Graph</li> <li>Hierarchy</li> <li>Sort order</li> <li>Sum</li> <li>more...</li> </ul>"},{"location":"PxWeb2/project/plans/#remaining-to-develop-2025","title":"Remaining to develop 2025","text":"<ul> <li>Show PxWebApi 2 in PxWeb</li> <li>Search in beginning of words</li> <li>Hide empty rows from table</li> <li>Chose code/text</li> <li>Saved query as alternative to the algorithm (documentation)</li> </ul>"},{"location":"PxWeb2/project/plans/#pxweb-2-release-october-2025","title":"PxWeb 2 Release October 2025","text":"<ul> <li>Startpage</li> <li>Save to file</li> <li>Saved query</li> <li>URL and breadcrumb</li> <li>Pivoting</li> <li>Head and footer</li> </ul>"},{"location":"PxWeb2/project/plans/#pxwebapi-20-release-september-2025","title":"PxWebApi 2.0 Release September 2025","text":"<ul> <li>Follows JSON-stat2 format</li> <li>Save to file</li> <li>Saved query</li> <li>Pivot</li> </ul>"},{"location":"PxWeb2/project/plans/#pxweb-20-testversion-december-2024","title":"PxWeb 2.0 testversion December 2024","text":"<ul> <li>Comprehensible table at first glance - Using an algorithm to show an understandable table the first time you look at it</li> <li>Search for codes in variables/contents</li> <li>Change value-list in a variable/content</li> <li>Opportunity to see main functionality, buttons and setup</li> <li>Possible to choose values in variables/contents and it will be updated in the table at once</li> <li>Number, decimal and updates in table</li> <li>Using PxWebApi 2.0 to get information in PxWeb 2.0</li> <li>The test version gets data from a test database in SCB \u2013 it shows Swedish and English texts</li> </ul>"},{"location":"PxWeb2/project/plans/#pxweb-20-testversion-june-2024","title":"PxWeb 2.0 testversion June 2024","text":"<ul> <li>New PxWeb page with variablebox and table, getting data from API 2.0 </li> <li>Language management</li> <li>Algorithm for choosing the best result for displaying a table</li> <li>Choose different values in variable and see changes in the table</li> </ul>"},{"location":"PxWeb2/project/process/","title":"Process in the project (January 2024 - October 2025)","text":"<ul> <li>The project group work in sprints of three weeks.</li> <li>The group follow the scrum rituals with sprintplanning, refinement, retro and daily stand-up.</li> <li>The sprints end with a demo (sprint review) on Monday every third week at twelve o'clock.</li> <li>Developers have an open Teams-link where they cooperate daily.</li> <li>The project group meet physically once a quarter.</li> </ul>"},{"location":"PxWeb2/project/process/#test-tools","title":"Test tools","text":"Type of test Testing tools Unit and integration tests Vitest/Jest Stories in Storybook Static code analysis CodeQL (in GitHub) Thirdparty code Dependabot security and version updates, Dependabot alerts Use Snyk Advisor to check development and maintenance health of libraries Automated end-to-end tests Mabl Acceptancetests Mabl, Chromatic: UI Review (Manual test) Regressiontests Mabl Chromatic: UI Test Accessibility testing @storybook/addon-a11ly    Shows relevant results automatically in Storybook, Axe browser extension Lighthouse Mabl with Axe Valid HTML5 (W3C validator) Security tests http://securityheaders.io/ Dynamic analysis: Detectify Nessus Performance tests JMeter Container security Trivy?"},{"location":"PxWeb2/project/try/","title":"Follow the development of PxWeb 2","text":""},{"location":"PxWeb2/project/try/#tables-from-statistics-sweden-database","title":"Tables from Statistics Sweden database","text":"<ul> <li>Database from Statistics Sweden</li> </ul>"},{"location":"PxWeb2/project/try/#tables-from-statistics-norway-database","title":"Tables from Statistics Norway database","text":"<ul> <li>Database from Statistics Norway</li> </ul>"},{"location":"PxWeb2/project/try/#try-it-with-your-own-data","title":"Try it with your own data","text":"<p>You are free to test PxWeb2 with your own data. It works both with px-files and cnmm database - Read the documentation</p>"},{"location":"PxWebApi/documentation/configuration/","title":"Configuring PxWebApi 2","text":"<p>The configuration is split into several different files, each with a specific purpose. The main file you will need to modify is <code>appsettings.json</code>.</p>"},{"location":"PxWebApi/documentation/configuration/#appsettingsjson","title":"appsettings.json","text":"<p>This file contains all functional settings. A recommended configuration after installation is the Admin protection settings, which control access to the admin API. The settings in <code>appsettings.json</code> can also be overridden by environment variables. For example, to set the DataSourceType, define an environment variable called <code>DataSource__DataSourceType</code>.</p>"},{"location":"PxWebApi/documentation/configuration/#general-settings","title":"General settings","text":""},{"location":"PxWebApi/documentation/configuration/#language","title":"Language","text":"<p>Specify which languages should be available by editing the <code>PxApiConfiguration.Languages</code> section. Set the default language by assigning <code>PxApiConfiguration.DefaultLanguage</code> to the <code>id</code> of one of the languages listed under <code>PxApiConfiguration.Languages</code>.</p>"},{"location":"PxWebApi/documentation/configuration/#downloading-data","title":"Downloading data","text":"<p>You can limit the size of data that can be downloaded using the <code>PxApiConfiguration.MaxDataCells</code> setting. You can also control which formats are available for downloading data by setting <code>PxApiConfiguration.OutputFormats</code>. The following formats can be enabled or disabled:</p> <ul> <li>Excel (<code>xlsx</code>)</li> <li>HTML table (<code>html</code>)</li> <li>Legacy PxJson format (<code>json-px</code>)</li> <li>Parquet (<code>parquet</code>)</li> </ul> <p>The following formats are always available and cannot be disabled:</p> <ul> <li>PX (<code>px</code>)</li> <li>JSON-stat v2 (<code>json-stat2</code>)</li> <li>Comma separated (<code>csv</code>)</li> </ul> <p>Note</p> <p>JSON-stat v1 has been deprecated and is no longer supported as an output format.</p>"},{"location":"PxWebApi/documentation/configuration/#attribution","title":"Attribution","text":"<p>You can specify how you would like others to reference your data by setting <code>PxApiConfiguration.SourceReference</code>. Make sure to provide a section for each language specified under <code>PxApiConfiguration.Languages</code>.</p> <p>You can also specify the license for the data under <code>PxApiConfiguration.License</code>.</p>"},{"location":"PxWebApi/documentation/configuration/#caching","title":"Caching","text":"<p>You can control how long a response should be cached by setting <code>PxApiConfiguration.CacheTime</code> (in seconds).</p> <p>You also have the option to clear the cache at a specific time by setting <code>PxApiConfiguration.CacheClearTime</code>.</p>"},{"location":"PxWebApi/documentation/configuration/#datasource","title":"Datasource","text":"<p>PxWebApi 2.0 supports two different data sources: PX file-based or CNMM. You can only configure one at a time. Set <code>DataSource.DataSourceType</code> to either <code>PX</code> or <code>CNMM</code> to specify which you want to use.</p>"},{"location":"PxWebApi/documentation/configuration/#px-datasource","title":"PX datasource","text":"<p>For the PX file datasource, you can set <code>DataSource.DataSourceType.PX.StrictAggregations</code> to either <code>true</code> or <code>false</code> to determine if aggregations can be overlapping or not.</p>"},{"location":"PxWebApi/documentation/configuration/#cnmm-datasource","title":"CNMM datasource","text":"<p>You should only have one database specified, and you must set <code>DataSource.DataSourceType.CNMM.DatabaseId</code> to match the <code>id</code> of the database in <code>SqlDb.config</code>.</p> <p>When you configure the CNMM datasource, a health check is automatically set up to verify the database connection. It connects to the default database in <code>SqlDb.config</code> and executes a statement. The default statement is <code>select 1</code>, but you can change this by setting <code>DataSource.DataSourceType.CNMM.HealthCheckQuery</code>. Avoid using queries that take a long time to process.</p>"},{"location":"PxWebApi/documentation/configuration/#saved-query-storage","title":"Saved query storage","text":"<p>Saved queries are an essential part of the API. Users can create, view, and run saved queries. Saved queries can also be used as the default selection when a user does not specify any selection when downloading data.</p> <p>You can store saved queries either as files on the file system or in a relational database. Select the storage method by setting <code>SavedQuery.Backend</code>.</p>"},{"location":"PxWebApi/documentation/configuration/#file","title":"File","text":"<p>Specify the path where saved queries should be stored by setting <code>SavedQuery.FileStorage.Path</code>.</p>"},{"location":"PxWebApi/documentation/configuration/#database","title":"Database","text":"<p>Specify the connection string and other relevant settings for storing saved queries in a database.</p>"},{"location":"PxWebApi/documentation/configuration/#rate-limiting","title":"Rate limiting","text":"<p>API rate limiting settings are found under <code>IpRateLimiting</code>. You can read more about the options here. The most important settings are <code>IpRateLimiting.GeneralRules.Period</code> and <code>IpRateLimiting.GeneralRules.Limit</code>, which control the time window and the number of calls allowed during that period. If you do not run behind a proxy or load balancer, you should remove the <code>IpRateLimiting.RealIpHeader</code> setting.</p>"},{"location":"PxWebApi/documentation/configuration/#admin-protection","title":"Admin protection","text":"<p>The admin API is protected by both an IP filter and a token that must be specified in the request. You can set these options using <code>AdminProtection.IpWhitelist</code> and <code>AdminProtection.AdminKey</code>. You can specify more than one IP in <code>AdminProtection.IpWhitelist</code>, including ranges of IPs in CIDR notation.</p>"},{"location":"PxWebApi/documentation/configuration/#appconfig","title":"app.config","text":"<p>This is for legacy configuration. It contains paths for: - language files - aggregation and valueset files - the name of the CNMM configuration file In most cases, the default settings are sufficient and you do not need to modify this file.</p>"},{"location":"PxWebApi/documentation/configuration/#webconfig","title":"web.config","text":"<p>The <code>web.config</code> file is used to configure PxWebApi 2.0 when running on Microsoft Internet Information Services (IIS). In most cases, the default settings are sufficient and you do not need to modify this file. Only advanced scenarios or specific server requirements may require changes.</p>"},{"location":"PxWebApi/documentation/configuration/#sqldbconfig","title":"SqlDb.config","text":"<p>Currently, this file is the same as in PxWeb 2023, with one exception: you should only have one database specified.</p>"},{"location":"PxWebApi/documentation/configuration/#log4netconfig","title":"log4net.config","text":"<p>The <code>log4net.config</code> file manages how PxWebApi 2.0 creates and stores logs. By default, logs are saved in the <code>/logs</code> directory. PxWebApi 2.0 relies on log4net for logging, which allows you to customize log levels, formats, and destinations. For more information on how to configure log4net, please refer to the official documentation here.</p>"},{"location":"PxWebApi/documentation/installation/","title":"Install PxWebApi 2 on your IIS server","text":"<p>This instruction guides you in how to install PxWebApi 2.0 on a clean install of IIS in the root of the  Default Web Site with PX file database.</p>"},{"location":"PxWebApi/documentation/installation/#prerequisites","title":"Prerequisites","text":"<ul> <li>A supported Windows server with IIS installed you might want to enable Dynamic Content Compression service for IIS to save some bandwidth.</li> <li>Have .NET 8 installed on the web server. It is recommended  to install the Windows Hosting Bundle Installer.</li> </ul>"},{"location":"PxWebApi/documentation/installation/#installation-steps","title":"Installation steps","text":"<ul> <li>Download the zip file for the latest release from GitHub. Make sure to Unblock it if its block by right clicking on it in File Explorer and check the <code>Unblock</code> checkbox.</li> <li>Extract the zip file to the location of your choice.</li> <li>Copy the content of the <code>release</code> folder that you just extracted to <code>C:\\inetpub\\wwwroot</code>.</li> <li>Give the user <code>IIS APPPOOL\\DefaultAppPool</code> <code>Modify</code> and <code>Write</code> permissions to the folder  <code>C:\\inetpub\\wwwroot\\wwwroot\\ControllerStates</code>.</li> <li>Create a folder called <code>sq</code> under <code>C:\\inetpub\\wwwroot\\wwwroot</code> and place you data in that folder. And give the user <code>IIS APPPOOL\\DefaultAppPool</code> <code>Modify</code> and <code>Write</code> permissions.</li> <li>Create a folder called <code>Database</code> under <code>C:\\inetpub\\wwwroot\\wwwroot</code> and place you data in that folder. And give the user <code>IIS APPPOOL\\DefaultAppPool</code> <code>Modify</code> and <code>Write</code> permissions.</li> </ul> <p>Info</p> <p>If you do not have any data of your own you can download the  tiny demo database  and use that as your database to test things out.</p> <ul> <li>Generate the <code>Menu.xml</code> file with the following PowerShell command.   <pre><code>Invoke-WebRequest -Uri 'http://localhost/api/v2/admin/database' -Method Put -Headers @{'API_ADMIN_KEY' = 'test'}\n</code></pre></li> <li>Wait for the <code>Menu.xml</code> file to be created. It can take some time depending on the size of your database. You can run the following PowerShell command to see if the file has been created.   <pre><code>Invoke-WebRequest -Uri 'http://localhost/api/v2/admin/database' -Method Get -Headers @{'API_ADMIN_KEY' = 'test'} | Select-Object -Expand Content\n</code></pre>   You will get a JSON result. Look for a Finished at <code>Message</code> <pre><code>{\n  \"State\": \"finished\",\n  \"LastRunTime\": \"2025-08-29T13:54:42Z\",\n  \"EventsFromLastRun\": [\n      {\n          \"Type\": \"Information\",\n          \"Message\": \"Started at 8/29/2025 1:54:42 PM\"\n      },\n      {\n          \"Type\": \"Information\",\n          \"Message\": \"Menu build started 2025-08-29 15:54:42\"\n      },\n      {\n          \"Type\": \"Information\",\n          \"Message\": \"Menu build ended 2025-08-29 15:54:42\"\n      },\n      {\n          \"Type\": \"Information\",\n          \"Message\": \"Finished at 8/29/2025 1:54:42 PM\"\n      }\n  ]\n}\n</code></pre></li> <li>Generate the search index. The search index is used by the API to answer questions about the content in the database. Generate it by running the following PowerShell command.   <pre><code>Invoke-WebRequest -Uri 'http://localhost/api/v2/admin/searchindex' -Method POST -Headers @{'API_ADMIN_KEY' = 'test'}\n</code></pre></li> <li>Wait for the search index to be created. It can take some time depending on the size of your database. You can run the following PowerShell command to see if the search index has been created.   <pre><code>Invoke-WebRequest -Uri 'http://localhost/api/v2/admin/searchindex' -Method Get -Headers @{'API_ADMIN_KEY' = 'test'} | Select-Object -Expand Content\n</code></pre>   You will get a JSON result. Look for a Finished at <code>Message</code> <pre><code>{\n    \"State\": \"finished\",\n    \"LastRunTime\": \"2025-08-29T14:17:50Z\",\n    \"EventsFromLastRun\": [\n        {\n            \"Type\": \"Information\",\n            \"Message\": \"Started at 8/29/2025 2:17:49 PM\"\n        },\n        {\n            \"Type\": \"Information\",\n            \"Message\": \"Finished at 8/29/2025 2:17:50 PM\"\n        }\n    ]\n}\n</code></pre></li> <li>Verify that the api is running by opening up a browser on the web server and go to http://localhost/api/v2/tables. This will result in a JSON response listing the contents of your database.</li> </ul>"},{"location":"documentation/overview/","title":"Overview","text":"<p>To set up the PxTools ecosystem, you must first install and configure PxWebApi 2.0. This API acts as the backend service for data access and management. Once PxWebApi 2.0 is running and properly configured, you can proceed to install PxWeb 2.0. During the configuration of PxWeb 2.0, you need to connect it to your PxWebApi instance and make any additional customizations required for your environment.</p> <p>The installation and configuration steps for both PxWebApi and PxWeb are described in detail in their respective documentation sections.</p>"},{"location":"documentation/overview/#pxweb-classic-vs-20","title":"PxWeb \u00abClassic\u00bb vs 2.0","text":""},{"location":"documentation/overview/#releases","title":"Releases","text":"<ul> <li>PxWeb 2.0</li> <li>PxWebApi 2.0</li> <li>PxWeb \"Classic\"</li> </ul>"},{"location":"px-file-format/px-2013/","title":"PX file format 2013","text":""},{"location":"px-file-format/px-2013/#readers-guide","title":"Readers guide","text":""},{"location":"px-file-format/px-2013/#what-this-instruction-covers","title":"What this instruction covers","text":"<p>This manual describes how a PC-Axis PX file is constructed. The manual is intended for people that wants to get a introduction of how to use and to extend the Core part of the PC-Axis SDK. The reader are not required have any type of PC-Axis experience to understand the content but it helps. </p>"},{"location":"px-file-format/px-2013/#how-this-guide-is-organized","title":"How this guide is organized","text":"<p>The document is divided into two part. The first part defines how the PX file structure works. The second part defined all keywords used in the PC-Axis File Format.</p>"},{"location":"px-file-format/px-2013/#related-documents","title":"Related documents","text":"<p>Earlier versions of the PC-Axis file format.</p>"},{"location":"px-file-format/px-2013/#getting-started","title":"Getting started","text":"<p>We must first try to explain the basic structure of the PX-file. PX-files consist of keywords that describes the contents or the data cube. Some keywords are mandatory while some are optional. Some keywords have an language option and some keywords have a sub key and there is always at least one value specified for a keyword. Some basic rules for how keywords are written - The keyword is mandatory. - Language is optional. - Language is always written within square brackets. - Language is always written immediately after the keyword. - The sub key is optional. - The sub key is always written within parentheses. - The sub key is written is written after language if present otherwise it is written after the keyword. - Value(s) are mandatory. - Value(s) are always written after the equal sign. - If there are multiple values each value is written within quotation marks and are separated by a comma sign. - If there is only one value then it can be written without any quotation marks. - Values(s) are delimited with quotation marks which means that a value itself cannot contain a quotation mark. - The end of values (and the beginning of a new keyword) is always marked with a semicolon. - Longer texts are divided into several records (except for value text orvariable names which must in one line when in parentheses after a keyword).</p> <p><pre><code>KEYWORD[LANGUAGE](SUB-KEY)=\"VALUE_1\",\"VALUE_2\", \u2026;\nKEYWORD[LANGUAGE](SUB-KEY)=VALUE_1;\nKEYWORD[LANGUAGE]=\"VALUE_1\",\"VALUE_2\", \u2026;\nKEYWORD (SUB-KEY)=\"VALUE_1\",\"VALUE_2\", \u2026;\nKEYWORD[LANGUAGE]=VALUE_1;\nKEYWORD(SUB-KEY)=VALUE_1;\n</code></pre> The file itself is divided into two parts one metadata part and the data part. The data part starts after the keyword <code>DATA</code>. If the keyword <code>CHARSET</code> is missing it means that all texts are in DOS text format, so that the same files can be used both in the DOS and the Windows version of PC-Axis. Starting with version 2005 it is possible to have more than one language in a PX file. The second language is repeated for all necessary keywords. <code>CONTENTS=\"Population\";</code>, <code>CONTENTS[sv]=\u201dBefolkning\u201d;</code> etc. Which languages are available are given in the keyword <code>LANGUAGES</code>.</p>"},{"location":"px-file-format/px-2013/#keywords","title":"Keywords","text":""},{"location":"px-file-format/px-2013/#alphabetical-list-of-keywords","title":"Alphabetical list of keywords","text":"Keyword Mandatory Multiplicity Language dependent Default value AGGREGALLOWED No 0-1 No YES ATTRIBUTE-ID No 0-1 No ATTRIBUTE-TEXT No 0-1 Yes ATTRIBUTES No 0-? No AUTOPEN No 0-1 No NO AXIS-VERSION No 0-1 No BASEPERIOD No 0-? Yes CELLNOTE No 0-? Yes CELLNOTEX No 0-? Yes CFPRICES No 0-? No CHARSET No 0-1 No CODEPAGE No 0-1 No iso-8859-1 CODES Yes 0-16 No CONFIDENTIAL No 0-1 No 0 CONTACT No 0-? Yes CONTENTS Yes 1 Yes CONTVARIABLE Yes 0-1 Yes COPYRIGHT No 0-1 No NO CREATION-DATE Yes 0-1 No DATA Yes 1 No DATABASE No 0-1 Yes DATANOTE No 0-? Yes DATANOTECELL No 0-1 Yes DATANOTESUM No 0-1 Yes DATASYMBOL1 No 0-1 Yes . DATASYMBOL2 No 0-1 Yes .. DATASYMBOL3 No 0-1 Yes ... DATASYMBOL4 No 0-1 Yes .... DATASYMBOL5 No 0-1 Yes ..... DATASYMBOL6 No 0-1 Yes ...... DATASYMBOLNIL No 0-1 Yes - DATASYMBOLSUM No 0-1 Yes DAYADJ 0-1 0-? Yes NO DECIMALS Yes 1 No DEFAULT-GRAPH No 0-1 No DESCRIPTION No 0-1 Yes DESCRIPTIONDEFAULT No 0-1 No DIRECTORY-PATH No 0-1 No DOMAIN No 0-16 No DOUBLECOLUMN No 0-16 Yes NO ELIMINATION No 0-16 Yes NO FIRST-PUBLISHED No 0-1 No HEADING Yes (0)-1 Yes HIERARCHIES No 0-1 Yes HIERARCHYLEVELS No 0-1 Yes HIERARCHYLEVELSOPEN No 0-1 Yes HIERARCHYNAMES No 0-1 Yes INFO No 0-1 Yes INFOFILE No 0-1 Yes KEYS No 0-16 Yes LANGUAGE Yes 1 No LANGUAGES No 0-1 No LAST-UPDATED No 0-1 No LINK No 0-1 Yes MAP No 0-1 Yes MATRIX Yes 1 No META-ID No 0-? Yes NEXT-UPDATE No 0-1 No NOTE No 0-? Yes NOTEX No 0-? Yes OFFICIAL-STATISTICS No 0-1 No NO PARTITIONED No 0-16 Yes PRECISION No 0-? Yes PRESTEXT No 0-16 No 1 PX-SERVER No 0-1 No REFPERIOD No 0-1/0-? Yes ROUNDING No 0-1 No SEASADJ No 0-? No NO SHOWDECIMALS No 0-1 No SOURCE No 0-1 Yes STOCKFA No 0-? Yes STUB Yes 0-1 Yes SUBJECT-AREA Yes 1 Yes SUBJECT-CODE Yes 1 No SURVEY No 0-1 Yes SYNONYMS No 0-1 No TABLEID No 0-1 No TIMEVAL No 0-1 Yes TITLE Yes 1 Yes UNITS Yes 1-? Yes UPDATE-FREQUENCY No 0-1 No VALUENOTE No 0-? Yes VALUENOTEX No 0-? Yes VALUES Yes 1-16 Yes VARIABLE-TYPE No 0-16 No"},{"location":"px-file-format/px-2013/#mandatory-keywords","title":"Mandatory keywords","text":"<p>These keywords are compulsory. The text (the contents belonging to the key word) should be written on the same line as the keyword or on a line of its own, always within quotation marks.</p>"},{"location":"px-file-format/px-2013/#contents","title":"CONTENTS","text":"<p>Type: Text Length: 256 characters Multiline: No</p> <p>Information about the contents, which makes up the first part of a title created when retrieving tables from PC-Axis. The text must not exceed 256 characters (before 2002 only 100 chars).</p>"},{"location":"px-file-format/px-2013/#data","title":"DATA","text":"<p>Type: integer/text Length: N/A Multiline: Yes</p> <p>The keyword <code>DATA</code> must be placed at the end of the file, followed by all the data cells or if <code>KEYS</code> are used the variable values and all data cells that differ from <code>0</code>.</p>"},{"location":"px-file-format/px-2013/#file-without-keys","title":"File without <code>KEYS</code>","text":"<p>After the key word follows all data cells that belong to the table. In most cases the cells are written with one record per line in the table. The number of records will thus be determined by the number of values in the stub. The length of the records depends upon the number of values in the heading, and also upon the size of figures. Table cells that contain a dash, one, two, three, four, five or six dots should be within quotation marks. For data without keys it is possible to write all cells in just one record, terminated by a semicolon. PC-Axis accepts the delimiters comma, space, semicolon, tabulator. The different delimiters are synonyms and can be mixed in the file. Recommended delimiter is space.</p>"},{"location":"px-file-format/px-2013/#files-with-keys","title":"Files with <code>KEYS</code>","text":"<p>For every variable in the stub is indicated the value for the variable within quotation marks, comma separated, followed by all data cells for that row (no quotation marks, space separated).</p> <p>Whether the text from <code>VALUES</code> or from <code>CODES</code> are used for a variable is indicated by the keyword <code>KEYS(\u201dvar\u201d)=CODES</code> or <code>KEYS(\u201dvar\u201d)=VALUES</code>. It is possible to use <code>VALUES</code> from one variable and <code>CODES</code> for another in the same file. Rows that only contain 0 (zeros) are excluded from the file One - six dots Data that is missing is stored as one, two, three, four, five or six dots. It is not possible to get a dot or two dots by excluding a value. Thus, you cannot write <code>1,,2,3</code> in order to get <code>1,\".\",3,4</code> For PC-Axis version prior to 2005 a dash is presented as 0 and saved as 0. Thus, you cannot afterwards find out if the original value was - or 0. Starting with 2005 PC-Axis keeps track on which cells are \u2013 and the keyword <code>DATASYMBOLNIL</code> can be used to show something else in the table. How the dots are shown on screen is determined by the keywords <code>DATASYMBOL1</code>, etc. If these keywords are missing the presentation is taken from PC-Axis language files.</p>"},{"location":"px-file-format/px-2013/#number-of-decimals-when-a-file-is-saved","title":"Number of decimals when a file is saved","text":"<p>The keyword <code>DECIMALS</code> determines the number of decimals to be saved. If the file also contains the key word <code>PRECISION</code>, PC-AXIS saves as many decimals as corresponds to the largest number specified by <code>DECIMALS</code> or <code>PRECISION</code>. All cells are stored with the same number of decimals.</p>"},{"location":"px-file-format/px-2013/#decimals","title":"DECIMALS","text":"<p>Type: integer [0, 15] Length: Lines of 256 characters Multiline: No</p> <p>The number of decimals in the table cells. 0 - 15. (0-6 if <code>SHOWDECIMALS</code> is not included). Indicates how many decimals will be saved in the PC-Axis file. Written without quotation marks. Compare <code>SHOWDECIMALS</code>.</p>"},{"location":"px-file-format/px-2013/#description","title":"DESCRIPTION","text":"<p>Type: text Length: N/A Multiline: Yes</p> <p>If a file contains <code>DESCRIPTION</code>, when fetching from a disk, this text is used to show the contents of the disk. C.f. <code>TITLE</code>. If the user wants to save a file in PC-AXIS and writes a text that describes the file, this text will be saved as <code>DESCRIPTION</code>. The text will be used to show the contents of tables in the SUBJECT AREA. The text is not presented as a note nor in any other way when the table is presented on the screen unless the keyword <code>DESCRIPTIONDEFAULT</code> is used. In this case the description is shown instead of the title.</p>"},{"location":"px-file-format/px-2013/#heading","title":"HEADING","text":"<p>Type: text Length: 256 character per value Multiline: Yes</p> <p>At least one of the keywords <code>STUB</code> or <code>HEADING</code> must be included. Usually both are included, as you choose one or several variables for the stub and the heading, respectively. The keywords are followed by a list with the chosen variables. The variables are within quotation marks and separated by commas. If the list with the variables has to be divided up into several lines, this should be done after a comma and not within the variable name.</p>"},{"location":"px-file-format/px-2013/#matrix","title":"MATRIX","text":"<p>Type: text Length: 20 Multiline: No</p> <p>The name of the matrix. Is suggested as file name when the file is fetched. (new length 2008).</p>"},{"location":"px-file-format/px-2013/#stub","title":"STUB","text":"<p>Type: text Length: 256 characters per value Multiline: Yes</p> <p>At least one of the keywords <code>STUB</code> or <code>HEADING</code> must be included. Usually both are included, as you choose one or several variables for the stub and the heading, respectively. The keywords are followed by a list with the chosen variables. The variables are within quotation marks and separated by commas. If the list with the variables has to be divided up into several lines, this should be done after a comma and not within the variable name.</p>"},{"location":"px-file-format/px-2013/#subject-area","title":"SUBJECT-AREA","text":"<p>Type: text Length: 256 characters Multiline: No</p> <p>The name of the subject area in plain text, as shown in the menu \"Select subject area\". The text must not exceed 256 characters (new length in 2008).</p>"},{"location":"px-file-format/px-2013/#subject-code","title":"SUBJECT-CODE","text":"<p>Type: text Length: 20 characters Multiline: No</p> <p>Subject area code. It is used to create files with tables available in PC-Axis. The text must not exceed 20 characters (new length 2008).</p>"},{"location":"px-file-format/px-2013/#title","title":"TITLE","text":"<p>Type: text Length: Lines of 256 characters Multiline: Yes</p> <p>The title of the table, reflecting its contents and variables. Is not needed if the file contains <code>DESCRIPTION</code>, in that case the text belonging to description is used. How the heading of a table will look depends on which variables the user chooses; the heading thus created will then be saved as <code>TITLE</code>. (Compare also <code>DESCRIPTIONDEFAULT</code>) If the file contains <code>DESCRIPTION</code> the text for this key word will be used.</p>"},{"location":"px-file-format/px-2013/#units","title":"UNITS","text":"<p>Type: text Length: 256 characters Multiline: No</p> <p>Unit text, e.g. ton, index. The text must not exceed 256 characters (new length 2008). Compare <code>UNITS</code> for <code>CONTVARIABLE</code>. When there is a <code>CONTVARIABLE</code> the keyword <code>UNITS</code> takes an index and is repeated for every value for the contents variable. <code>UNITS(\"value\")=\"tons\"</code>.</p>"},{"location":"px-file-format/px-2013/#values","title":"VALUES","text":"<p>Type: text Length: 256 characters per value Multiline: Yes</p> <p>The keyword <code>VALUES</code> occurs once for each variable in the table, and is followed by the variable name in parentheses, within quotation marks. The values will be in the same order as in the stub and heading, respectively. They are within quotation marks and separated by commas. Each value name must not exceed 256 characters. If the values have to be divided up into several lines, this should be done after a comma and not within the value name. See also the keyword <code>TIMEVAL</code> below.</p>"},{"location":"px-file-format/px-2013/#optional-keywords","title":"Optional keywords","text":""},{"location":"px-file-format/px-2013/#aggregallowed","title":"AGGREGALLOWED","text":"<p>Type: {YES,NO} Length: N/A Multiline: No</p> <p>If the contents of the table cannot be aggregated, contains for instance index and average, the keyword <code>AGGREGALLOWED=NO;</code> is used to stop the user from making a sum. If the keyword is missing aggregations are allowed</p>"},{"location":"px-file-format/px-2013/#attribute-id","title":"ATTRIBUTE-ID","text":"<p>Type: text Length: 256 characters per value Multiline: Yes</p> <p>This keyword list the identities of all attributes. Indirectly it also specifies the number of attributes. Each attribute id is separate with a comma sign and it is written within quotes. The <code>ATTRIBUTE-ID</code> keyword must be written before the <code>ATTRIBUTES</code> keyword and must exist if the <code>ATTRIBUTES</code> keyword is present. The <code>ATTRIBUTE-ID</code> keyword is multilingual, that is you do not have to specify it for each language.</p> <p>Example <pre><code>ATTRIBUTE-ID=\"ObsStatus\",\"ObsConf\";\n</code></pre></p>"},{"location":"px-file-format/px-2013/#attribute-text","title":"ATTRIBUTE-TEXT","text":"<p>Type: text Length: Lines of 256 characters Multiline: Yes</p> <p>This keyword specifies a textual representation of the attribute for presentational purpose and it is optional. Each attribute text is separate with a comma sign and written within quotes. The <code>ATTRIBUTE-TEXT</code> keyword must occur after the <code>ATTRIBUTE-ID</code> and it is also language dependent. The order of the texts should be the same as for the order of the ids.</p> <p>Example <pre><code>ATTRIBUTE-TEXT=\"Observation status\",\"Observation confidence\";\nATTRIBUTE-TEXT[\"sv\"]=\"Status\",\"Tillit\";\n</code></pre></p>"},{"location":"px-file-format/px-2013/#attributes","title":"ATTRIBUTES","text":"<p>Type: text Length: Lines of 256 characters Multiline: Yes</p> <p>This keyword specifies all attributes for as single observation value. Each attribute value is separated with a comma sign and written within quotes. The attribute values must appear in the same order as they appeared in the <code>ATTRIBUTE-ID</code> keyword. The <code>ATTRIBUTES</code> keyword must be written after <code>ATTRIBUTE-ID</code> and the <code>CODES</code> keyword. Which observation it refers to is given by the key which is written within parenthesis after the keyword and before the equal sign. The format of the key is one value code for each variable in the order indicated by <code>STUB</code> and <code>HEADING</code> starting with the variables in the <code>STUB</code>. If the attribute key is missing then this will indicate the default values for the attributes for all measures that do not have any <code>ATTRIBUTES</code> specified. This is also referred to as the default attributes. The default attributes should always be specified in order to save space and unnecessary repetition.</p> <p>Example <pre><code>ATTRIBUTES(\"01\",\"A01\",\"2005\")=\"A\",\"P\";\nATTRIBUTES=\"A\",\"F\";\n</code></pre></p>"},{"location":"px-file-format/px-2013/#autopen","title":"AUTOPEN","text":"<p>Type: {YES,NO} Length: N/A Multiline: No Default value: NO</p> <p>If the file is published on the Internet and the user selects a number of variables and values it is possible to remove the windows \u201cSelect variables and values\u201d in PC-Axis and instead show the complete table in PC-Axis when the file is downloaded. <code>AUTOPEN=YES;</code>.</p>"},{"location":"px-file-format/px-2013/#axis-version","title":"AXIS-VERSION","text":"<p>Type: text Length: 20 characters Multiline: No</p> <p>Version number for PC-Axis (new text length 2008). Is read and saved but otherwise not used.</p>"},{"location":"px-file-format/px-2013/#baseperiod","title":"BASEPERIOD","text":"<p>Type: text Length: Lines of 256 characters Multiline: Yes</p> <p>Base period for, for instance index series. Is shown with the footnote. If there is a contents variable the keyword is repeated for each value of the contents variable.</p>"},{"location":"px-file-format/px-2013/#cellnote","title":"CELLNOTE","text":"<p>Type: text Length: Lines of 256 characters Multiline: Yes</p> <p>Footnote for a single cell or a group of cells. Which cell it refers to is given by values and variables. If a value is given as * the note refers to all values for that variable. Only one value can be given for each variable. The values are given in the variable order indicated by <code>STUB</code> and <code>HEADING</code>, starting with <code>STUB</code>.</p> <p>Example <pre><code>CELLNOTE(\"*\",\"*\",\"\u00d6rebro\", \"1995\")=\"Lekebergs kommun has been excluded from \u00d6rebro\";\n</code></pre></p>"},{"location":"px-file-format/px-2013/#cellnotex","title":"CELLNOTEX","text":"<p>Type: text Length: Lines of 256 characters Multiline: Yes</p> <p>As CELLNOTE but shown mandatory as for NOTEX.</p>"},{"location":"px-file-format/px-2013/#cfprices","title":"CFPRICES","text":"<p>Type: {C,F} Length: N/A Multiline: No</p> <p>Indicates if data is in current or fixed prices. <code>C</code> is used for Current and <code>F</code> for Fixed prices. Quotation marks must be used. <code>CFPRICES=\"C\"</code> or <code>CFPRICES(\"value\")=\"C\"</code>.</p>"},{"location":"px-file-format/px-2013/#charset","title":"CHARSET","text":"<p>Type: text Length: 20 characters Multiline: No</p> <p><code>CHARSET=\u201dANSI\u201d;</code> indicates that the texts in the file are written in Windows format. If the keyword is missing it means that the texts in the file are in DOS format. They will be translated by PC-Axis to Windows. This keyword must appear in the beginning of the file before any texts that can include characters outside A-Z, 0-9.</p>"},{"location":"px-file-format/px-2013/#codepage","title":"CODEPAGE","text":"<p>Type: text Length: 20 characters Multiline: No</p> <p>Is used when creating XML format to get correct characters. Default <code>iso8859-1</code>. Max 20 chars.</p>"},{"location":"px-file-format/px-2013/#codes","title":"CODES","text":"<p>Type: text Length: Lines of 256 characters Multiline: Yes</p> <p>The key word <code>CODES</code> is used if a variable exists both in code and plain text. The codes are written in the same way as <code>VALUES</code>. Not more than 256 characters.</p>"},{"location":"px-file-format/px-2013/#confidential","title":"CONFIDENTIAL","text":"<p>Type: integer Length: 20 characters Multiline: No Default value: 0</p> <p>Possibility to do some manipulation with the data in the data part of the file. Is only suitable if the user cannot download the total file since the data can be read in any editor. Max 20 chars. The only other value that it can take is 1 and that uses the simple disclosure control. Which is that it displays values of 1 to be 0 and values of 2 to be 3.</p>"},{"location":"px-file-format/px-2013/#contact","title":"CONTACT","text":"<p>Type: text Length: Lines of 256 characters Multiline: Yes</p> <p>States the person who can give information about the statistics. Is written in the form name, organization, telephone, fax, e-mail. Several persons can be stated in the same text string and are then divided by the #-sign. Is shown with the footnote. If there is a contents variable the keyword is repeated for each value <code>CONTACT(\"value\")=\"xx\"</code>.</p> <p>Example <pre><code>CONTACT=\"Maria Svensson, SCB, +4619176800, +4619176900,\nmaria.svensson@scb.se\";\n</code></pre></p>"},{"location":"px-file-format/px-2013/#contvariable","title":"CONTVARIABLE","text":"<p>Type: text Length: 256 characters Multiline: Yes</p> <p>This is used to indicate that the table has two or more different contents. For instance the contents Import and the contents Export. The variable name must also be found either as <code>STUB</code> or <code>HEADING</code>. When a content variable exists a number of keywords will be indexed: <code>DAYADJ</code>, <code>SEASADJ</code>, <code>STOCKFA</code>, <code>UNITS</code>, <code>CONTACT</code>, <code>LASTUPDATED</code>, <code>REFPERIOD</code>, <code>BASEPERIOD</code>, <code>CFPRICES</code>. The keyword <code>CONTVARIABLE</code> must proceed the first keyword that will be indexed.</p>"},{"location":"px-file-format/px-2013/#copyright","title":"COPYRIGHT","text":"<p>Type: text Length: 20 characters Multiline: No</p> <p>Copyright is given as <code>YES</code> or <code>NO</code>. If <code>COPYRIGHT=YES</code> the copyright refers to the organization given in <code>SOURCE</code>. Is shown together with footnotes.</p>"},{"location":"px-file-format/px-2013/#creation-date","title":"CREATION-DATE","text":"<p>Type: text Length: 256 characters Multiline: Yes</p> <p>Date when file was created. Written in format <code>CCYYMMDD hh:mm</code>, e.g. <code>\u201d19960612 14:20\u201d</code>. Is shown together with footnotes.</p>"},{"location":"px-file-format/px-2013/#database","title":"DATABASE","text":"<p>Type: text Length: Lines of 256 characters Multiline: Yes</p> <p>The name of the database from where the statistics is retrieved. Is shown with the footnote.</p>"},{"location":"px-file-format/px-2013/#datanote","title":"DATANOTE","text":"<p>Type: text Length: 20 characters Multiline: Yes</p> <p>The <code>DATANOTE</code> keyword is used to indicate that a note exists for a certain element of the statistical cube If no sub key is specified like below the data note * is valid for the hole table. <code>DATANOTE=\"*\";</code> If there is just one part sub key like below. Then the sub key must refer to a variable and the data note is for that variable. <code>DATANOTE(\"VARIABLE\")=\"*\";</code> The example above states that the data note * should be displayed for variable <code>VARIABLE</code>. If the sub key is divided into two parts. Then the first part of the sub key refers to a variable and the second part refers to a value for that variable. <code>DATANOTE(\"VARIABLE\",\"VALUE\")=\"*\";</code> The example above states that the data note * should be displayed for value <code>VALUE</code> for variable <code>VARIABLE</code>. The keyword is multilingual so different data notes can be used for different languages. It is recommended to add the data note to the note text. E.g. if you have a note on the time period 2010 it could look something like this in the PX file.</p> <pre><code>DATANOTE(\"tid\",\"2010\")=\"*\";\nVALUENOTE(\"tid\",\"2010\")=\"* Preliminary results\";\n</code></pre>"},{"location":"px-file-format/px-2013/#datanotecell","title":"DATANOTECELL","text":"<p>Type: text Length: 20 characters Multiline: No This keyword needs information for which value for each variable it applies and the symbol is presented together with the figure. CODES are used in the parentheses to indicate the right value. * means all values for the variable.</p> <p>Example <pre><code>DATANOTECELL(\"*\", \"20\", \"*\", \"BE0101F2\", \"*\")=\"Ae\";\n</code></pre></p>"},{"location":"px-file-format/px-2013/#datanotesum","title":"DATANOTESUM","text":"<p>Type: text Length: 20 characters Multiline: No</p> <p>This keyword gives information which symbol is presented together with the figure after a sum has been made consisting of differing datanote symbols.</p>"},{"location":"px-file-format/px-2013/#datasymbol1-datasymbol2-datasymbol3-datasymbol4-datasymbol5-datasymbol6","title":"DATASYMBOL1, DATASYMBOL2, DATASYMBOL3, DATASYMBOL4, DATASYMBOL5, DATASYMBOL6","text":"<p>Type: text Length: 20 characters Multiline: No</p> <p>This if used to indicate how a stored \u201c.\u201d is to be presented in a table.</p>"},{"location":"px-file-format/px-2013/#datasymbolnil","title":"DATASYMBOLNIL","text":"<p>Type: text Length: 20 characters Multiline: No</p> <p>This is used to indicate how a stored \u201c-\u201d is to be presented in a table. The <code>\u2013</code> indicates that the figure is absolutely nil.</p>"},{"location":"px-file-format/px-2013/#datasymbolsum","title":"DATASYMBOLSUM","text":"<p>Type: text Length: 20 characters Multiline: No</p> <p>This if used to indicate how a sum of differing numbers of dots will be shown. The sum is stored as <code>\u201c\u2026\u2026.\u201d</code>.</p>"},{"location":"px-file-format/px-2013/#dayadj","title":"DAYADJ","text":"<p>Type: {YES, NO} Length: N/A Multiline: No</p> <p><code>DAYADJ=YES</code> means that data is adjusted e.g. to take into account the number of working days. Default is <code>DAYADJ=NO</code> or <code>DAYADJ(\"value\")=NO</code>.</p>"},{"location":"px-file-format/px-2013/#default-graph","title":"DEFAULT-GRAPH","text":"<p>Type: integer Length: 1-10 Multiline: No</p> <p>This keyword is read and saved in the PX-file but not shown in PC-axis.</p>"},{"location":"px-file-format/px-2013/#descriptiondefault","title":"DESCRIPTIONDEFAULT","text":"<p>Type: {YES, NO} Length: N/A Multiline: No</p> <p>For some languages it is difficult to build a table title dynamically. The keyword <code>DESCRIPTIONDEFAULT=YES;</code> means that the text after keyword Description will be used as title for the table.</p>"},{"location":"px-file-format/px-2013/#directory-path","title":"DIRECTORY-PATH","text":"<p>Type: text Length: 256 characters Multiline: Yes</p> <p>This keyword is read and saved in the PX-file but not shown in PC-axis.</p>"},{"location":"px-file-format/px-2013/#domain","title":"DOMAIN","text":"<p>Type: text Length: 256 characters Multiline: Yes</p> <p>Can occur once for each variable. Is used to determine which value sets are of interest, and thus which aggregation lists can be used. (New text length 2008).</p>"},{"location":"px-file-format/px-2013/#doublecolumn","title":"DOUBLECOLUMN","text":"<p>Type: {YES, NO} Length: N/A Multiline: No</p> <p>This keyword is used to get code and text in separate columns for the specified variable <code>DOUBLECOLUMN(\u201dregion\u201d)=YES;</code>. On screen it only has effect if the user selects presentation in matrix format.</p>"},{"location":"px-file-format/px-2013/#elimination","title":"ELIMINATION","text":"<p>Type: {YES, NO, text} Length: 256 characters Multiline: Yes</p> <p>States if and how a variable may be eliminated in a table. If the key word is written as <code>ELIMINATION(\"variable name\")=\"value name\"</code> this value will be used as an elimination value if the user does not select the variable to the table. If the key word is written <code>ELIMINATION(\"variable name\")=YES</code> this means that the variable will be eliminated by the summing up of all the values for that variable in the file.</p>"},{"location":"px-file-format/px-2013/#first-published","title":"FIRST-PUBLISHED","text":"<p>Type: {YES, NO, text} Length: 256 characters Multiline: Yes</p> <p>The date when the data cube was first published in the format <code>CCYYMMDD hh:mm</code>.</p> <p>Example <pre><code>FIRST-PUBLISHED=20130224 20:55\n</code></pre></p>"},{"location":"px-file-format/px-2013/#hierarchies","title":"HIERARCHIES","text":"<p>Type: text Length: Lines of 256 characters for each value Multiline: Yes</p> <p>Example 1 <pre><code>HIERARCHIES(\u201cCountry\u201d)=\"parent\",\"parent\":\"child\",...\n</code></pre></p> <p>Example 2 <pre><code>HIERARCHIES(\"Country\")=\u201dE25\",\"E25\":\"E15\",\"E15\":\"E12\",\n\"E12\":\"AT\",\"E12\":\"BE\",\"E12\":\"FI\",\"E12\":\"FR\",\"E12\":\"DE\",\n\"E12\":\"GR\",\"E12\":\"IR\",\"E12\":\"IT\",\"E12\":\"LU\",\"E12\":\"NL\",\n\"E12\":\"PT\",\"E12\":\"ES\",\"E15\":\"DK\",\"E15\":\"SW\",\"E15\":\"UK\",\n\"E25\":\"E10\",\"E10\":\"CY\",\"E10\":\"CZ\",\"E10\":\"EE\",\"E10\":\"HU\",\n\"E10\":\"LV\",\"E10\":\"LT\",\"E10\":\"MT\",\"E10\":\"PL\",\"E10\":\"SK\", \"E10\":\"SI\";\n</code></pre></p>"},{"location":"px-file-format/px-2013/#hierarchylevels","title":"HIERARCHYLEVELS","text":"<p>Type: integer Length: N/A Multiline: No</p> <p>Indicate the number of levels existing for a symmetrical tree.</p> <p>Example <pre><code>HIERARCHYLEVELS(\"Country\")=4\n</code></pre></p>"},{"location":"px-file-format/px-2013/#hierarchylevelsopen","title":"HIERARCHYLEVELSOPEN","text":"<p>Type: integer Length: N/A Multiline: No</p> <p>Indicate how the tree is to be displayed when the tree is shown for the first time</p> <p>Example <pre><code>HIERARCHYLEVELSOPEN(\"Country\")=1\n</code></pre> the first level is open.</p>"},{"location":"px-file-format/px-2013/#hierarchynames","title":"HIERARCHYNAMES","text":"<p>Type: text Length: Lines of 256 characters per name Multiline: Yes</p> <p>To give names to the levels in a symmetrical tree.</p> <p>Example <pre><code>HIERARCHYNAMES(\"Country\")=\"NameOfLevel1\",\"NameOfLevel2\",..\n</code></pre></p>"},{"location":"px-file-format/px-2013/#info","title":"INFO","text":"<p>Type: text Length: Lines of 256 characters Multiline: Yes</p> <p>This keyword is read and saved in the PX-file but not shown in PC-axis.</p>"},{"location":"px-file-format/px-2013/#infofile","title":"INFOFILE","text":"<p>Type: text Length: Lines of 256 characters Multiline: Yes</p> <p>Name of a file containing more information for the statistics. If the keyword exists in the file a new button is shown in the toolbar and the user can click for more information. Depending on the file type and to which program the type is associated the corresponding program is started and the information shown. (Word for .DOC, Notepad for .TXT etc).</p>"},{"location":"px-file-format/px-2013/#keys","title":"KEYS","text":"<p>Type: {VALUES, CODES} Length: N/A Multiline: No</p> <p>If this keyword is used it must occur as many times as there are variables in the stub. It contains the name of the variable and whether the key is taken from <code>VALUES</code> or <code>CODES</code>. </p> <p>Example <pre><code>KEYS(\"age\")=VALUES;\nKEYS(\"region\")=CODES;\n</code></pre> When it is used all data rows start with the Value/code of the variables in the stub. See Description of <code>DATA</code>.</p>"},{"location":"px-file-format/px-2013/#language","title":"LANGUAGE","text":"<p>Type: text Length: 2 characters Multiline: No The language used in the PC-Axis file (2 chars), sv for Swedish, en for English etc. Compare language codes for text files. If the keyword is used, the words for \u201cand\u201d and \u201cby\u201d are read from the text file of that language. Otherwise these words are read from the text file of the language in which the program is running.</p>"},{"location":"px-file-format/px-2013/#languages","title":"LANGUAGES","text":"<p>Type: text Length: 2 characters per language Multiline: Yes</p> <p>If more than one language in the PC-Axis file then all languages are mentioned here (2 chars each)</p> <p>Example <pre><code>LANGUAGES=\"en\",\"sv\";\n</code></pre></p>"},{"location":"px-file-format/px-2013/#last-updated","title":"LAST-UPDATED","text":"<p>Type: text Length: 256 characters Multiline: No</p> <p>Date and time for latest update format <code>CCYYMMDD hh:mm</code>. Example <code>\u201d19960528 11:35\u201d</code>. Is also used in Aremos file format. The date is not updated in PC-AXIS when changes are made to the table. If there is a contents variable it is written as <code>LAST-UPDATED(\"value\")= 19990318 18:12</code></p>"},{"location":"px-file-format/px-2013/#link","title":"LINK","text":"<p>Type: text Length: 256 characters Multiline: Yes</p> <p>This keyword is read and saved in the PX-file but not shown in PC-axis.</p>"},{"location":"px-file-format/px-2013/#map","title":"MAP","text":"<p>Type: text Length: 256 characters Multiline: Yes</p> <p>Used for a geographic variable for which maps can be made (new text length 2008). </p> <p>Example <pre><code>MAP(\"region\")=\"Sweden_municipality\";\n</code></pre></p>"},{"location":"px-file-format/px-2013/#meta-id","title":"META-ID","text":"<p>Type: text Length: 256 Multiline: No</p> <p>The <code>META-ID</code> keyword is used to reference a external meta information about a table, variable or value. I there is no subkey specified the <code>META-ID</code> refers to the cube <code>META-ID=\"RT:12\";</code> If there is just one part sub key like below. Then the sub key must refer to a variable and the data note is for that variable. <code>META-ID(\"VARIABLE\")=\"V:167\";</code> The example above states that the reference id for variable <code>VARIABLE</code> is <code>V:167</code>. If the sub key is divided into two parts. Then the first part of the sub key refers to a variable and the second part refers to a value for that variable. <code>META-ID(\"VARIABLE\",\"VALUE\")=VAL:232;</code> The example above states that the reference id for value <code>VALUE</code> for variable <code>VARIABLE</code> is <code>VAL:232</code>.</p>"},{"location":"px-file-format/px-2013/#next-update","title":"NEXT-UPDATE","text":"<p>Type: text Length: 256 characters Multiline: Yes</p> <p>This keyword is read and saved in the PX-file but not shown in PC-axis.</p>"},{"location":"px-file-format/px-2013/#note","title":"NOTE","text":"<p>Type: text Length: Lines of 256 characters Multiline: Yes</p> <p>Contains a footnote which is showed in the statistical databases if the user demands it. In PC-AXIS it is shown if the user presses F7. The footnote may either refer to the entire table or to a table variable. In the latter case the key word must be followed by the variable name in parentheses.</p>"},{"location":"px-file-format/px-2013/#notex","title":"NOTEX","text":"<p>Type: text Length: Lines of 256 characters Multiline: Yes</p> <p>Contains a note which is always shown in the statistical databases. In PCAXIS the note is shown automatically, before the table is presented on the screen. The note may either refer to the entire table or to a table variable. In the latter case the key word should be followed by the variable name in parentheses.</p>"},{"location":"px-file-format/px-2013/#official-statistics","title":"OFFICIAL-STATISTICS","text":"<p>Type: {YES, NO} Length: N/A Multiline: No</p> <p>Indicates if the data table is included in the official statistics of the organization.</p>"},{"location":"px-file-format/px-2013/#partitioned","title":"PARTITIONED","text":"<p>Type: complex text Length: N/A Multiline: Yes This is used to partition a variable into levels, for instance <pre><code>PARTITIONED(\"region\")=\"municipality\",1,4;\nPARTITIONED(\"region\")=\"subarea\",5;\n</code></pre> states that the first four positions for the regional values contain the municipality code, and that the subarea code starts in position 5. Thus the values for the variable region after the key word <code>VALUES</code> must be written in code, not plain text. Max 3 levels can be used, each gives start position and length except for the last level where length is implied as rest of the code.</p>"},{"location":"px-file-format/px-2013/#precision","title":"PRECISION","text":"<p>Type: integer Length: N/A Multiline: No Can occur for single values. Determines that the value shall be presented with a number of decimals that differs from the keyword <code>SHOWDECIMALS</code>. Is to be written as <code>PRECISION(\"variable name\",\"value name\")=n</code> where n is a figure between <code>1</code> and <code>6</code>. The number of decimals for precision must be higher than the number of decimals for <code>SHOWDECIMALS</code> to have any effect.</p>"},{"location":"px-file-format/px-2013/#prestext","title":"PRESTEXT","text":"<p>Type: integer Length: N/A Multiline: No</p> <p>From PX file format version 2010 and later the definition of PRESTEXT is changed the prior versions defines it as: States if texts or codes are shown for the keyword <code>VALUES</code>. Normally a file is created so that texts are found after the keyword <code>VALUES</code> and codes after the keyword <code>CODES</code>. This is equivalent to <code>PRESTEXT(\"variable name\")=1;</code> which is the default. If a user changes presentation from texts to codes and saves the file the value codes will be saved after the keyword <code>VALUES</code> and value texts after the keyword <code>CODES</code>. In this case the keyword <code>PRESTEXT</code> is written as <code>PRESTEXT(\"variable name\")=0</code>. This enables PC-Axis to know if it is necessary to switch to codes if aggregation is selected. The user can also decide to show both codes and texts for a value and in this case the keyword is saved as <code>PRESTEXT(\"variable name\")=2</code> or <code>PRESTEXT(\"variable name\")=3</code>. <code>PRESTEXT</code> becomes 2 if it originally was 1 and 3 if it originally was 0. In the new definition the <code>PRESTEXT</code> is that it is an integer value between 0- 3 that describes how the value should be presented in a user interface. The values text should always be defined by the <code>VALUES</code> keyword and the codes should always be defined by the <code>CODES</code> keyword. - 0 - Only the value code should be displayed. - 1 - Only the value text should be displayed. - 2 - Both code and value should be displayed and the order should be the code and then the value text. - 3 - Both code and value should be displayed and the order should be the value text then the value code.</p> <p>Example <pre><code>VALUES(\"region\")=\"Albania\",\"Austria\",\u2026\n\u2026\nCODES(\"region\")=\"AL\",\"AT\",\u2026\n\u2026\nPRESTEXT(\"region\")=2\nSince the PRESTEXT is set to 2 the values would be presented as\nAL Albania\nAT Austria\n\u2026\n</code></pre></p>"},{"location":"px-file-format/px-2013/#px-server","title":"PX-SERVER","text":"<p>Type: text Length: 256 characters Multiline: Yes</p> <p>This keyword is read and saved in the PX-file but not shown in PC-axis.</p>"},{"location":"px-file-format/px-2013/#refperiod","title":"REFPERIOD","text":"<p>Type: text Length: 256 characters Multiline: Yes</p> <p>Text with information on the exact period for the statistics. Is shown with the footnote. If there is a contents variable the keyword is repeated for each value of the contents variable.</p>"},{"location":"px-file-format/px-2013/#rounding","title":"ROUNDING","text":"<p>Type: integer Length: 0-1 Multiline: Yes</p> <p>If rounding is missing then rounding will be done in accordance with information in the pcax2000.ini file. If the keyword is missing then the decimal rule in pcax2000.ini is used. - Rounding = <code>0</code> means that .5 is rounded up if the previous figure is odd, 1.5 becomes 2. - Rounding = <code>1</code> means that .5 is always rounded up. 0.5 becomes 1 and 1.5 becomes 2.</p>"},{"location":"px-file-format/px-2013/#seasadj","title":"SEASADJ","text":"<p>Type: {YES, NO} Length: N/A Multiline: No</p> <p><code>SEASADJ=YES</code> means that data is seasonally adjusted. Default is <code>SEASADJ=NO</code> or <code>SEASADJ(\"value\")=NO</code>.</p>"},{"location":"px-file-format/px-2013/#showdecimals","title":"SHOWDECIMALS","text":"<p>Type: integer Length: N/A Multiline: No</p> <p>The number of decimals to be shown in the table, 0-6. Must be the same or smaller than the number stored as indicated by the keyword <code>DECIMALS</code>. If <code>SHOWDECIMALS</code> is not stated in the file the number stated by <code>DECIMALS</code> will be used.</p>"},{"location":"px-file-format/px-2013/#source","title":"SOURCE","text":"<p>Type: text Length: 256 characters Multiline: Yes</p> <p>States the organization which is responsible for the statistics. Is shown with the footnote.</p>"},{"location":"px-file-format/px-2013/#stockfa","title":"STOCKFA","text":"<p>Type: {S, F, A} Length: N/A Multiline: No</p> <p>Indicates if data is stock, flow or average. The used characters <code>S</code> (stock), <code>F</code> (flow) and <code>A</code> (average) must be within quotation marks. <code>STOCKFA=\"S\"</code> or <code>STOCKFA(\"value\")=\"S\"</code>.</p>"},{"location":"px-file-format/px-2013/#survey","title":"SURVEY","text":"<p>Type: text Length: 256 characters Multiline: Yes</p> <p>This keyword is read and saved in the PX-file but not shown in PC-axis. Is shown on information screen in PX-web if installation parameter true.</p>"},{"location":"px-file-format/px-2013/#synonyms","title":"SYNONYMS","text":"<p>Type: text Length: 256 characters Multiline: Yes</p> <p>This is used for search in PX-Web. If the table concerns CPI the synonym can be \u201cInflation\u201d. Several words can be included within \u201c \u201c and the total line can be max 256 chars.</p>"},{"location":"px-file-format/px-2013/#tableid","title":"TABLEID","text":"<p>Type: text Length: 256 characters Multiline: Yes A text that is the identity of the table.</p>"},{"location":"px-file-format/px-2013/#timeval","title":"TIMEVAL","text":"<p>Type: text Length: N/A Multiline: Yes</p> <p>New keyword in version 1.5 to enable the use of time series. After the keyword is the name of the time variable given, e.g. <code>TIMEVAL(\u201dtime\u201d)</code>. <code>TLIST</code> gives information on timescale and timeperiods. The time periods must be consecutive. If the table contains the time periods <code>1994</code>, <code>1995</code>, <code>1996</code> <code>TIMEVAL</code> can be written in this way: <pre><code>TIMEVAL(\u201dtime\u201d)=TLIST(A1, \u201d1994\u201d-\u201d1996\u201d);\n</code></pre> or <pre><code>TIMEVAL(\u201dtime\u201d)=TLIST(A1), \u201d1994\u201d, \u201d1995\u201d,\"1996\u201d;\n</code></pre> The following formats are used: - <code>A1</code> for annual statistics written as <code>CCYY</code> (<code>C</code> for century, <code>Y</code> for year) - <code>H1</code> for halfyear in format <code>CCYYH</code>, where <code>H</code> is 1 or 2 - <code>Q1</code> for quarterly data written <code>CCYYQ</code>, where <code>Q</code> is 1 - 4. - <code>M1</code> for monthly statistics written <code>CCYYMM</code> - <code>W1</code> for weekly data written <code>CCYYWW</code></p> <p><code>TIMEVAL</code> is used in PC-AXIS version 1.7 when converting to Aremos and Gesmes/Ecoser format. It is also used for start and stop time in list of contents in HTML-format. The variable time can be used both after the keyword <code>VALUES</code> and after <code>TIMEVAL</code>. If both exist <code>TIMEVAL</code> must be placed after <code>VALUES</code>. If only <code>TIMEVAL</code> exists <code>VALUES</code> for time are created as follows: Time scale time periods shown as <pre><code>A1 1995, 1996, 1997\nH1 1995H1, 1995H2, 1996H1\nQ1 1995Q1, 1995Q2, 1995Q3\nM1 1995M01, 1995M02, 1995M03\nW1 1995W01, 1995W02, 1005W03\n</code></pre></p>"},{"location":"px-file-format/px-2013/#update-frequency","title":"UPDATE-FREQUENCY","text":"<p>Type: text Length: 256 characters Multiline: Yes</p> <p>This keyword is read and saved in the PX-file but not shown in PC-axis.</p>"},{"location":"px-file-format/px-2013/#valuenote","title":"VALUENOTE","text":"<p>Type: text Length: Lines of 256 characters Multiline: Yes</p> <p>A footnote for separate variable values. Should be written with the variable name and the value names in parentheses.</p>"},{"location":"px-file-format/px-2013/#valuenotex","title":"VALUENOTEX","text":"<p>Type: text Length: Lines of 256 characters Multiline: Yes</p> <p>Mandatory footnote for single values for a variable. Is written with the variable name and the value name in parentheses. Is shown the same way as <code>NOTEX</code>.</p>"},{"location":"px-file-format/px-2013/#variable-type","title":"VARIABLE-TYPE","text":"<p>Type: text Length: 256 characters Multiline: Yes</p> <p>This keyword is read and saved in the PX-file but not shown in PC-Axis.</p>"},{"location":"px-file-format/px-2013/#recommended-order-of-the-keywords","title":"Recommended order of the keywords","text":"<p>Some keywords must be written before some other keywords e.g. <code>STUB</code> and <code>HEADING</code> must precede <code>VALUES</code> and <code>CODES</code>. Here follows a list of recommended order for how keywords should be written I PX-files though applications should not depend on that this order is used.</p> <ul> <li>CHARSET</li> <li>AXIS-VERSION</li> <li>CODEPAGE</li> <li>LANGUAGE</li> <li>LANGUAGES</li> <li>CREATION-DATE</li> <li>NEXT-UPDATE</li> <li>PX-SERVER</li> <li>DIRECTORY-PATH</li> <li>UPDATE-FREQUENCY</li> <li>TABLEID</li> <li>SYNONYMS</li> <li>DEFAULT-GRAPH</li> <li>DECIMALS</li> <li>SHOWDECIMALS</li> <li>ROUNDING</li> <li>MATRIX</li> <li>AGGREGALLOWED</li> <li>AUTOPEN</li> <li>SUBJECT</li> <li>CODE</li> <li>SUBJECT-AREA</li> <li>CONFIDENTIAL</li> <li>COPYRIGHT</li> <li>DESCRIPTION</li> <li>TITLE</li> <li>DESCRIPTIONDEFAULT</li> <li>CONTENTS</li> <li>UNITS</li> <li>STUB</li> <li>HEADING</li> <li>CONTVARIABLE</li> <li>VALUES</li> <li>TIMEVAL</li> <li>CODES</li> <li>DOUBLECOLUMN</li> <li>PRESTEXT</li> <li>DOMAIN</li> <li>VARIABLE-TYPE</li> <li>HIERARCHIES</li> <li>HIERARCHYLEVELS</li> <li>HIERARCHYLEVELSOPEN</li> <li>HIERARCHYNAMES</li> <li>MAP</li> <li>PARTITIONED</li> <li>ELIMINATION</li> <li>PRECISION</li> <li>LAST-UPDATED</li> <li>STOCKFA</li> <li>CFPRICES</li> <li>DAYADJ</li> <li>SEASADJ</li> <li>UNITS</li> <li>CONTACT</li> <li>REFPERIOD</li> <li>BASEPERIOD</li> <li>DATABASE</li> <li>SOURCE</li> <li>SURVEY</li> <li>LINK</li> <li>INFOFILE</li> <li>FIRST-PUBLISHED</li> <li>META-ID</li> <li>OFFICIAL-STATISTICS</li> <li>INFO</li> <li>NOTEX</li> <li>NOTE</li> <li>VALUENOTEX</li> <li>VALUENOTE</li> <li>CELLNOTEX</li> <li>CELLNOTE</li> <li>DATASYMBOL1</li> <li>DATASYMBOL2</li> <li>DATASYMBOL3</li> <li>DATASYMBOL4</li> <li>DATASYMBOL5</li> <li>DATASYMBOL6</li> <li>DATASYMBOLSUM</li> <li>DATASYMBOLNIL</li> <li>DATANOTECELL</li> <li>DATANOTESUM</li> <li>DATANOTE</li> <li>KEYS</li> <li>ATTRIBUTE-ID</li> <li>ATTRIBUTE-TEXT</li> <li>ATTRIBUTES</li> <li>PRECISION</li> <li>DATA</li> </ul>"},{"location":"tools/pxweb/","title":"PxWeb","text":"<p>PxWeb is used for publishing statistics in a database at the web and is since 1 January 2016 free of charge for government agencies and municipalities, international NSI:s and international organisations of statistics.</p>"},{"location":"tools/pxweb/#pxweb-2","title":"PxWeb 2","text":"<p>Development ... see the project repository</p>"},{"location":"tools/pxweb/#classic-pxweb","title":"Classic PxWeb","text":"<p>Still maintained ... see the project repository</p> <ol> <li>Test</li> </ol>"}]}